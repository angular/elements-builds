{"version":3,"file":"elements.js","sources":["../../../packages/elements/src/ng-element-application-context.js","../../../packages/elements/src/utils.js","../../../packages/elements/src/extract-projectable-nodes.js","../../../packages/elements/src/ng-element.js","../../../packages/elements/src/ng-element-constructor.js","../../../packages/elements/src/ng-elements.js","../../../packages/elements/src/register-as-custom-elements.js","../../../packages/elements/src/version.js","../../../packages/elements/public_api.js","../../../packages/elements/elements.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ApplicationRef, NgZone } from \"@angular/core\";\nexport class NgElementApplicationContext {\n    /**\n     * @param {?} injector\n     */\n    constructor(injector) {\n        this.injector = injector;\n        this.applicationRef = this.injector.get(ApplicationRef);\n        this.ngZone = this.injector.get(NgZone);\n    }\n    /**\n     * @template R\n     * @param {?} cb\n     * @return {?}\n     */\n    runInNgZone(cb) { return this.ngZone.run(cb); }\n}\nfunction NgElementApplicationContext_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElementApplicationContext.prototype.applicationRef;\n    /** @type {?} */\n    NgElementApplicationContext.prototype.ngZone;\n    /** @type {?} */\n    NgElementApplicationContext.prototype.injector;\n}\n//# sourceMappingURL=ng-element-application-context.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ elProto = /** @type {?} */ (Element.prototype);\nconst /** @type {?} */ matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n    elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n/**\n * Provide methods for scheduling the execution of a callback.\n */\nexport const /** @type {?} */ scheduler = {\n    /**\n     * Schedule a callback to be called after some delay.\n     * @param {?} cb\n     * @param {?} delay\n     * @return {?}\n     */\n    schedule(cb, delay) { const /** @type {?} */ id = window.setTimeout(cb, delay); return () => window.clearTimeout(id); },\n    /**\n     * Schedule a callback to be called before the next render.\n     * (If `window.requestAnimationFrame()` is not available, use `scheduler.schedule()` instead.)\n     * @param {?} cb\n     * @return {?}\n     */\n    scheduleBeforeRender(cb) {\n        // TODO(gkalpak): Implement a better way of accessing `requestAnimationFrame()`\n        //                (e.g. accounting for vendor prefix, SSR-compatibility, etc).\n        if (typeof window.requestAnimationFrame === 'undefined') {\n            return scheduler.schedule(cb, 16);\n        }\n        const /** @type {?} */ id = window.requestAnimationFrame(cb);\n        return () => window.cancelAnimationFrame(id);\n    },\n};\n/**\n * Convert a camelCased string to kebab-cased.\n * @param {?} input\n * @return {?}\n */\nexport function camelToKebabCase(input) {\n    return input.replace(/[A-Z]/g, char => `-${char.toLowerCase()}`);\n}\n/**\n * Create a `CustomEvent` (even on browsers where `CustomEvent` is not a constructor).\n * @param {?} doc\n * @param {?} name\n * @param {?} detail\n * @return {?}\n */\nexport function createCustomEvent(doc, name, detail) {\n    const /** @type {?} */ bubbles = false;\n    const /** @type {?} */ cancelable = false;\n    // On IE9-11, `CustomEvent` is not a constructor.\n    if (typeof CustomEvent !== 'function') {\n        const /** @type {?} */ event = doc.createEvent('CustomEvent');\n        event.initCustomEvent(name, bubbles, cancelable, detail);\n        return event;\n    }\n    return new CustomEvent(name, { bubbles, cancelable, detail });\n}\n/**\n * Return the name of the component or the first line of its stringified version.\n * @param {?} component\n * @return {?}\n */\nexport function getComponentName(component) {\n    return (/** @type {?} */ (component)).overriddenName || component.name ||\n        component.toString().split('\\n', 1)[0];\n}\n/**\n * Check whether the input is an `Element`.\n * @param {?} node\n * @return {?}\n */\nexport function isElement(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Check whether the input is a function.\n * @param {?} value\n * @return {?}\n */\nexport function isFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * Convert a kebab-cased string to camelCased.\n * @param {?} input\n * @return {?}\n */\nexport function kebabToCamelCase(input) {\n    return input.replace(/-([a-z\\d])/g, (_, char) => char.toUpperCase());\n}\n/**\n * Check whether an `Element` matches a CSS selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nexport function matchesSelector(element, selector) {\n    return matches.call(element, selector);\n}\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n * @param {?} value1\n * @param {?} value2\n * @return {?}\n */\nexport function strictEquals(value1, value2) {\n    return value1 === value2 || (value1 !== value1 && value2 !== value2);\n}\n/**\n * Throw an error with the specified message.\n * (It provides a centralized place where it is easy to apply some change/behavior to all errors.)\n * @param {?} message\n * @return {?}\n */\nexport function throwError(message) {\n    throw Error(message);\n}\n//# sourceMappingURL=utils.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// NOTE: This is a (slightly improved) version of what is used in ngUpgrade's\n//       `DowngradeComponentAdapter`.\n// TODO(gkalpak): Investigate if it makes sense to share the code.\nimport { isElement, matchesSelector } from \"./utils\";\n/**\n * @param {?} host\n * @param {?} ngContentSelectors\n * @return {?}\n */\nexport function extractProjectableNodes(host, ngContentSelectors) {\n    const /** @type {?} */ nodes = host.childNodes;\n    const /** @type {?} */ projectableNodes = ngContentSelectors.map(() => []);\n    let /** @type {?} */ wildcardIndex = -1;\n    ngContentSelectors.some((selector, i) => {\n        if (selector === '*') {\n            wildcardIndex = i;\n            return true;\n        }\n        return false;\n    });\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ii = nodes.length; i < ii; ++i) {\n        const /** @type {?} */ node = nodes[i];\n        const /** @type {?} */ ngContentIndex = findMatchingIndex(node, ngContentSelectors, wildcardIndex);\n        if (ngContentIndex !== -1) {\n            projectableNodes[ngContentIndex].push(node);\n        }\n    }\n    return projectableNodes;\n}\n/**\n * @param {?} node\n * @param {?} selectors\n * @param {?} defaultIndex\n * @return {?}\n */\nfunction findMatchingIndex(node, selectors, defaultIndex) {\n    let /** @type {?} */ matchingIndex = defaultIndex;\n    if (isElement(node)) {\n        selectors.some((selector, i) => {\n            if ((selector !== '*') && matchesSelector(node, selector)) {\n                matchingIndex = i;\n                return true;\n            }\n            return false;\n        });\n    }\n    return matchingIndex;\n}\n//# sourceMappingURL=extract-projectable-nodes.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter, Injector, SimpleChange } from \"@angular/core\";\nimport { extractProjectableNodes } from \"./extract-projectable-nodes\";\nimport { createCustomEvent, getComponentName, isFunction, scheduler, strictEquals, throwError } from \"./utils\";\n/**\n * TODO(gkalpak): Add docs.\n * \\@experimental\n * @record\n */\nexport function NgElement() { }\nfunction NgElement_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElement.prototype.ngElement;\n    /** @type {?} */\n    NgElement.prototype.componentRef;\n    /** @type {?} */\n    NgElement.prototype.attributeChangedCallback;\n    /** @type {?} */\n    NgElement.prototype.connectedCallback;\n    /** @type {?} */\n    NgElement.prototype.detach;\n    /** @type {?} */\n    NgElement.prototype.detectChanges;\n    /** @type {?} */\n    NgElement.prototype.disconnectedCallback;\n    /** @type {?} */\n    NgElement.prototype.getHost;\n    /** @type {?} */\n    NgElement.prototype.markDirty;\n}\n/**\n * Represents an `NgElement` input.\n * Similar to a `ComponentFactory` input (`{propName: string, templateName: string}`),\n * except that `attrName` is derived by kebab-casing `templateName`.\n * @record\n */\nexport function NgElementInput() { }\nfunction NgElementInput_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElementInput.prototype.propName;\n    /** @type {?} */\n    NgElementInput.prototype.attrName;\n}\n/**\n * Represents an `NgElement` input.\n * Similar to a `ComponentFactory` output (`{propName: string, templateName: string}`),\n * except that `templateName` is renamed to `eventName`.\n * @record\n */\nexport function NgElementOutput() { }\nfunction NgElementOutput_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElementOutput.prototype.propName;\n    /** @type {?} */\n    NgElementOutput.prototype.eventName;\n}\n/** @enum {string} */\nconst NgElementLifecyclePhase = {\n    // The element has been instantiated, but not connected.\n    // (The associated component has not been created yet.)\n    unconnected: 'unconnected',\n    // The element has been instantiated and connected.\n    // (The associated component has been created.)\n    connected: 'connected',\n    // The element has been instantiated, connected and then disconnected.\n    // (The associated component has been created and then destroyed.)\n    disconnected: 'disconnected',\n};\n/**\n * @record\n */\nfunction NgElementConnected() { }\nfunction NgElementConnected_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElementConnected.prototype.ngElement;\n    /** @type {?} */\n    NgElementConnected.prototype.componentRef;\n}\n/**\n * @abstract\n */\nexport class NgElementImpl extends HTMLElement {\n    /**\n     * @param {?} appContext\n     * @param {?} componentFactory\n     * @param {?} inputs\n     * @param {?} outputs\n     */\n    constructor(appContext, componentFactory, inputs, outputs) {\n        super();\n        this.appContext = appContext;\n        this.componentFactory = componentFactory;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.ngElement = null;\n        this.componentRef = null;\n        this.onConnected = new EventEmitter();\n        this.onDisconnected = new EventEmitter();\n        this.host = /** @type {?} */ (this);\n        this.componentName = getComponentName(this.componentFactory.componentType);\n        this.initialInputValues = new Map();\n        this.uninitializedInputs = new Set();\n        this.outputSubscriptions = new Map();\n        this.inputChanges = null;\n        this.implementsOnChanges = false;\n        this.changeDetectionScheduled = false;\n        this.lifecyclePhase = \"unconnected\" /* unconnected */;\n        this.cancelDestruction = null;\n    }\n    /**\n     * @param {?} attrName\n     * @param {?} oldValue\n     * @param {?} newValue\n     * @param {?=} namespace\n     * @return {?}\n     */\n    attributeChangedCallback(attrName, oldValue, newValue, namespace) {\n        const /** @type {?} */ input = /** @type {?} */ ((this.inputs.find(input => input.attrName === attrName)));\n        if (input) {\n            this.setInputValue(input.propName, newValue);\n        }\n        else {\n            throwError(`Calling 'attributeChangedCallback()' with unknown attribute '${attrName}' ` +\n                `on component '${this.componentName}' is not allowed.`);\n        }\n    }\n    /**\n     * @param {?=} ignoreUpgraded\n     * @return {?}\n     */\n    connectedCallback(ignoreUpgraded = false) {\n        this.assertNotInPhase(\"disconnected\" /* disconnected */, 'connectedCallback');\n        if (this.cancelDestruction !== null) {\n            this.cancelDestruction();\n            this.cancelDestruction = null;\n        }\n        if (this.lifecyclePhase === \"connected\" /* connected */) {\n            return;\n        }\n        const /** @type {?} */ host = /** @type {?} */ (this.host);\n        if (host.ngElement) {\n            if (ignoreUpgraded) {\n                return;\n            }\n            const /** @type {?} */ existingNgElement = (/** @type {?} */ (host)).ngElement;\n            const /** @type {?} */ existingComponentName = getComponentName(existingNgElement.componentRef.componentType);\n            throwError(`Upgrading '${this.host.nodeName}' element to component '${this.componentName}' is not allowed, ` +\n                `because the element is already upgraded to component '${existingComponentName}'.`);\n        }\n        this.appContext.runInNgZone(() => {\n            this.lifecyclePhase = \"connected\" /* connected */;\n            const /** @type {?} */ cThis = (/** @type {?} */ ((this)));\n            const /** @type {?} */ childInjector = Injector.create([], cThis.appContext.injector);\n            const /** @type {?} */ projectableNodes = extractProjectableNodes(cThis.host, cThis.componentFactory.ngContentSelectors);\n            cThis.componentRef =\n                cThis.componentFactory.create(childInjector, projectableNodes, cThis.host);\n            cThis.implementsOnChanges =\n                isFunction((/** @type {?} */ ((cThis.componentRef.instance))).ngOnChanges);\n            cThis.initializeInputs();\n            cThis.initializeOutputs();\n            cThis.detectChanges();\n            cThis.appContext.applicationRef.attachView(cThis.componentRef.hostView);\n            // Ensure `ngElement` is set on the host too (even for manually upgraded elements)\n            // in order to be able to detect that the element has been been upgraded.\n            cThis.ngElement = host.ngElement = cThis;\n            cThis.onConnected.emit();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    detach() { this.disconnectedCallback(); }\n    /**\n     * @return {?}\n     */\n    detectChanges() {\n        if (this.lifecyclePhase === \"disconnected\" /* disconnected */) {\n            return;\n        }\n        this.assertNotInPhase(\"unconnected\" /* unconnected */, 'detectChanges');\n        this.appContext.runInNgZone(() => {\n            const /** @type {?} */ cThis = /** @type {?} */ ((this));\n            cThis.changeDetectionScheduled = false;\n            cThis.callNgOnChanges();\n            cThis.componentRef.changeDetectorRef.detectChanges();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    disconnectedCallback() {\n        if (this.lifecyclePhase === \"disconnected\" /* disconnected */ ||\n            this.cancelDestruction !== null) {\n            return;\n        }\n        this.assertNotInPhase(\"unconnected\" /* unconnected */, 'disconnectedCallback');\n        const /** @type {?} */ doDestroy = () => this.appContext.runInNgZone(() => this.destroy());\n        this.cancelDestruction = scheduler.schedule(doDestroy, NgElementImpl.DESTROY_DELAY);\n    }\n    /**\n     * @return {?}\n     */\n    getHost() { return this.host; }\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    getInputValue(propName) {\n        this.assertNotInPhase(\"disconnected\" /* disconnected */, 'getInputValue');\n        if (this.lifecyclePhase === \"unconnected\" /* unconnected */) {\n            return this.initialInputValues.get(propName);\n        }\n        const /** @type {?} */ cThis = /** @type {?} */ ((this));\n        return (/** @type {?} */ (cThis.componentRef.instance))[propName];\n    }\n    /**\n     * @return {?}\n     */\n    markDirty() {\n        if (!this.changeDetectionScheduled) {\n            this.changeDetectionScheduled = true;\n            scheduler.scheduleBeforeRender(() => this.detectChanges());\n        }\n    }\n    /**\n     * @param {?} host\n     * @return {?}\n     */\n    setHost(host) {\n        this.assertNotInPhase(\"connected\" /* connected */, 'setHost');\n        this.assertNotInPhase(\"disconnected\" /* disconnected */, 'setHost');\n        this.host = host;\n    }\n    /**\n     * @param {?} propName\n     * @param {?} newValue\n     * @return {?}\n     */\n    setInputValue(propName, newValue) {\n        this.assertNotInPhase(\"disconnected\" /* disconnected */, 'setInputValue');\n        if (this.lifecyclePhase === \"unconnected\" /* unconnected */) {\n            this.initialInputValues.set(propName, newValue);\n            return;\n        }\n        const /** @type {?} */ cThis = /** @type {?} */ ((this));\n        if (!strictEquals(newValue, cThis.getInputValue(propName))) {\n            cThis.recordInputChange(propName, newValue);\n            (/** @type {?} */ (cThis.componentRef.instance))[propName] = newValue;\n            cThis.markDirty();\n        }\n    }\n    /**\n     * @param {?} phase\n     * @param {?} caller\n     * @return {?}\n     */\n    assertNotInPhase(phase, caller) {\n        if (this.lifecyclePhase === phase) {\n            throwError(`Calling '${caller}()' on ${phase} component '${this.componentName}' is not allowed.`);\n        }\n    }\n    /**\n     * @this {?}\n     * @return {?}\n     */\n    callNgOnChanges() {\n        if (this.implementsOnChanges && this.inputChanges !== null) {\n            const /** @type {?} */ inputChanges = this.inputChanges;\n            this.inputChanges = null;\n            (/** @type {?} */ ((this.componentRef.instance))).ngOnChanges(inputChanges);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        const /** @type {?} */ cThis = /** @type {?} */ ((this));\n        cThis.componentRef.destroy();\n        cThis.outputs.forEach(output => cThis.unsubscribeFromOutput(output));\n        this.ngElement = (/** @type {?} */ (this.host)).ngElement = null;\n        cThis.host.innerHTML = '';\n        cThis.lifecyclePhase = \"disconnected\" /* disconnected */;\n        cThis.onDisconnected.emit();\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} value\n     * @return {?}\n     */\n    dispatchCustomEvent(eventName, value) {\n        const /** @type {?} */ event = createCustomEvent(this.host.ownerDocument, eventName, value);\n        this.dispatchEvent(event);\n        if (this.host !== this) {\n            this.host.dispatchEvent(event);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    initializeInputs() {\n        this.inputs.forEach(({ propName, attrName }) => {\n            let /** @type {?} */ initialValue;\n            if (this.initialInputValues.has(propName)) {\n                // The property has already been set (prior to initialization).\n                // Update the component instance.\n                initialValue = this.initialInputValues.get(propName);\n            }\n            else if (this.host.hasAttribute(attrName)) {\n                // A matching attribute exists.\n                // Update the component instance.\n                initialValue = this.host.getAttribute(attrName);\n            }\n            else {\n                // The property does not have an initial value.\n                this.uninitializedInputs.add(propName);\n            }\n            if (!this.uninitializedInputs.has(propName)) {\n                // The property does have an initial value.\n                // Forward it to the component instance.\n                this.setInputValue(propName, initialValue);\n            }\n        });\n        this.initialInputValues.clear();\n    }\n    /**\n     * @this {?}\n     * @return {?}\n     */\n    initializeOutputs() {\n        this.outputs.forEach(output => this.subscribeToOutput(output));\n    }\n    /**\n     * @param {?} propName\n     * @param {?} currentValue\n     * @return {?}\n     */\n    recordInputChange(propName, currentValue) {\n        if (!this.implementsOnChanges) {\n            // The component does not implement `OnChanges`. Ignore the change.\n            return;\n        }\n        if (this.inputChanges === null) {\n            this.inputChanges = {};\n        }\n        const /** @type {?} */ pendingChange = this.inputChanges[propName];\n        if (pendingChange) {\n            pendingChange.currentValue = currentValue;\n            return;\n        }\n        const /** @type {?} */ isFirstChange = this.uninitializedInputs.has(propName);\n        const /** @type {?} */ previousValue = isFirstChange ? undefined : this.getInputValue(propName);\n        this.inputChanges[propName] = new SimpleChange(previousValue, currentValue, isFirstChange);\n        if (isFirstChange) {\n            this.uninitializedInputs.delete(propName);\n        }\n    }\n    /**\n     * @this {?}\n     * @param {?} output\n     * @return {?}\n     */\n    subscribeToOutput(output) {\n        const { propName, eventName } = output;\n        const /** @type {?} */ emitter = /** @type {?} */ ((/** @type {?} */ (this.componentRef.instance))[output.propName]);\n        if (!emitter) {\n            throwError(`Missing emitter '${propName}' on component '${this.componentName}'.`);\n        }\n        this.unsubscribeFromOutput(output);\n        const /** @type {?} */ subscription = emitter.subscribe((value) => this.dispatchCustomEvent(eventName, value));\n        this.outputSubscriptions.set(propName, subscription);\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    unsubscribeFromOutput({ propName }) {\n        if (!this.outputSubscriptions.has(propName)) {\n            return;\n        }\n        const /** @type {?} */ subscription = /** @type {?} */ ((this.outputSubscriptions.get(propName)));\n        this.outputSubscriptions.delete(propName);\n        subscription.unsubscribe();\n    }\n}\nNgElementImpl.DESTROY_DELAY = 10;\nfunction NgElementImpl_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElementImpl.DESTROY_DELAY;\n    /** @type {?} */\n    NgElementImpl.prototype.ngElement;\n    /** @type {?} */\n    NgElementImpl.prototype.componentRef;\n    /** @type {?} */\n    NgElementImpl.prototype.onConnected;\n    /** @type {?} */\n    NgElementImpl.prototype.onDisconnected;\n    /** @type {?} */\n    NgElementImpl.prototype.host;\n    /** @type {?} */\n    NgElementImpl.prototype.componentName;\n    /** @type {?} */\n    NgElementImpl.prototype.initialInputValues;\n    /** @type {?} */\n    NgElementImpl.prototype.uninitializedInputs;\n    /** @type {?} */\n    NgElementImpl.prototype.outputSubscriptions;\n    /** @type {?} */\n    NgElementImpl.prototype.inputChanges;\n    /** @type {?} */\n    NgElementImpl.prototype.implementsOnChanges;\n    /** @type {?} */\n    NgElementImpl.prototype.changeDetectionScheduled;\n    /** @type {?} */\n    NgElementImpl.prototype.lifecyclePhase;\n    /** @type {?} */\n    NgElementImpl.prototype.cancelDestruction;\n    /** @type {?} */\n    NgElementImpl.prototype.appContext;\n    /** @type {?} */\n    NgElementImpl.prototype.componentFactory;\n    /** @type {?} */\n    NgElementImpl.prototype.inputs;\n    /** @type {?} */\n    NgElementImpl.prototype.outputs;\n}\n//# sourceMappingURL=ng-element.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter } from \"@angular/core\";\nimport { NgElementImpl } from \"./ng-element\";\nimport { camelToKebabCase, throwError } from \"./utils\";\n/**\n * TODO(gkalpak): Add docs.\n * \\@experimental\n * @record\n */\nexport function NgElementConstructor() { }\nfunction NgElementConstructor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElementConstructor.prototype.is;\n    /** @type {?} */\n    NgElementConstructor.prototype.observedAttributes;\n    /** @type {?} */\n    NgElementConstructor.prototype.upgrade;\n    /* TODO: handle strange member:\n    new (): NgElementWithProps<T, P>;\n    */\n}\n/**\n * @record\n */\nexport function NgElementConstructorInternal() { }\nfunction NgElementConstructorInternal_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElementConstructorInternal.prototype.onConnected;\n    /** @type {?} */\n    NgElementConstructorInternal.prototype.onDisconnected;\n    /** @type {?} */\n    NgElementConstructorInternal.prototype.upgrade;\n}\n// For more info on `PotentialCustomElementName` rules see:\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst /** @type {?} */ PCEN_RE = createPcenRe();\nconst /** @type {?} */ PCEN_BLACKLIST = [\n    'annotation-xml',\n    'color-profile',\n    'font-face',\n    'font-face-src',\n    'font-face-uri',\n    'font-face-format',\n    'font-face-name',\n    'missing-glyph',\n];\n/**\n * @template T, P\n * @param {?} appContext\n * @param {?} componentFactory\n * @return {?}\n */\nexport function createNgElementConstructor(appContext, componentFactory) {\n    const /** @type {?} */ selector = componentFactory.selector;\n    if (!isPotentialCustomElementName(selector)) {\n        throwError(`Using '${selector}' as a custom element name is not allowed. ` +\n            'See https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name for more info.');\n    }\n    const /** @type {?} */ inputs = componentFactory.inputs.map(({ propName, templateName }) => ({\n        propName,\n        attrName: camelToKebabCase(templateName),\n    }));\n    const /** @type {?} */ outputs = componentFactory.outputs.map(({ propName, templateName }) => ({\n        propName,\n        // TODO(gkalpak): Verify this is what we want and document.\n        eventName: templateName,\n    }));\n    class NgElementConstructorImpl extends NgElementImpl {\n        constructor() {\n            super(appContext, componentFactory, inputs, outputs);\n            const /** @type {?} */ ngElement = /** @type {?} */ (this);\n            this.onConnected.subscribe(() => NgElementConstructorImpl.onConnected.emit(ngElement));\n            this.onDisconnected.subscribe(() => NgElementConstructorImpl.onDisconnected.emit(ngElement));\n        }\n        /**\n         * @param {?} host\n         * @param {?=} ignoreUpgraded\n         * @return {?}\n         */\n        static upgrade(host, ignoreUpgraded = false) {\n            const /** @type {?} */ ngElement = new NgElementConstructorImpl();\n            ngElement.setHost(host);\n            ngElement.connectedCallback(ignoreUpgraded);\n            return /** @type {?} */ (ngElement);\n        }\n    }\n    NgElementConstructorImpl.is = selector;\n    NgElementConstructorImpl.observedAttributes = inputs.map(input => input.attrName);\n    NgElementConstructorImpl.onConnected = new EventEmitter();\n    NgElementConstructorImpl.onDisconnected = new EventEmitter();\n    function NgElementConstructorImpl_tsickle_Closure_declarations() {\n        /** @type {?} */\n        NgElementConstructorImpl.is;\n        /** @type {?} */\n        NgElementConstructorImpl.observedAttributes;\n        /** @type {?} */\n        NgElementConstructorImpl.onConnected;\n        /** @type {?} */\n        NgElementConstructorImpl.onDisconnected;\n    }\n    inputs.forEach(({ propName }) => {\n        Object.defineProperty(NgElementConstructorImpl.prototype, propName, {\n            get: function () { return this.getInputValue(propName); },\n            set: function (newValue) {\n                this.setInputValue(propName, newValue);\n            },\n            configurable: true,\n            enumerable: true,\n        });\n    });\n    return /** @type {?} */ (NgElementConstructorImpl);\n}\n/**\n * @return {?}\n */\nfunction createPcenRe() {\n    // According to [the\n    // spec](https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name),\n    // `pcenChar` is allowed to contain Unicode characters in the 10000-EFFFF range. But in order to\n    // match this characters with a RegExp, we need the implementation to support the `u` flag.\n    // On browsers that do not support it, valid PotentialCustomElementNames using characters in the\n    // 10000-EFFFF range will still cause an error (but these characters are not expected to be used\n    // in practice).\n    let /** @type {?} */ pcenChar = '-.0-9_a-z\\\\u00B7\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u037D\\\\u037F-\\\\u1FFF' +\n        '\\\\u200C-\\\\u200D\\\\u203F-\\\\u2040\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF' +\n        '\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n    let /** @type {?} */ flags = '';\n    if (RegExp.prototype.hasOwnProperty('unicode')) {\n        pcenChar += '\\\\u{10000}-\\\\u{EFFFF}';\n        flags += 'u';\n    }\n    return RegExp(`^[a-z][${pcenChar}]*-[${pcenChar}]*$`, flags);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isPotentialCustomElementName(name) {\n    return PCEN_RE.test(name) && (PCEN_BLACKLIST.indexOf(name) === -1);\n}\n//# sourceMappingURL=ng-element-constructor.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { DOCUMENT } from \"@angular/platform-browser\";\nimport { NgElementApplicationContext } from \"./ng-element-application-context\";\nimport { createNgElementConstructor } from \"./ng-element-constructor\";\nimport { scheduler, throwError } from \"./utils\";\n/**\n * TODO(gkalpak): Add docs.\n * \\@experimental\n */\nexport class NgElements {\n    /**\n     * @param {?} moduleRef\n     * @param {?} customElementComponents\n     */\n    constructor(moduleRef, customElementComponents) {\n        this.moduleRef = moduleRef;\n        this.doc = this.moduleRef.injector.get(DOCUMENT);\n        this.definitions = new Map();\n        this.upgradedElements = new Set();\n        this.appContext = new NgElementApplicationContext(this.moduleRef.injector);\n        this.changeDetectionScheduled = false;\n        const /** @type {?} */ resolver = moduleRef.componentFactoryResolver;\n        customElementComponents.forEach(componentType => this.defineNgElement(this.appContext, resolver, componentType));\n    }\n    /**\n     * @param {?=} root\n     * @return {?}\n     */\n    detachAll(root = this.doc.documentElement) {\n        const /** @type {?} */ upgradedElements = Array.from(this.upgradedElements.values());\n        const /** @type {?} */ elementsToDetach = [];\n        this.traverseTree(root, (node) => {\n            upgradedElements.some(ngElement => {\n                if (ngElement.getHost() === node) {\n                    elementsToDetach.push(ngElement);\n                    return true;\n                }\n                return false;\n            });\n        });\n        // Detach in reverse traversal order.\n        this.appContext.runInNgZone(() => elementsToDetach.reverse().forEach(ngElement => ngElement.detach()));\n    }\n    /**\n     * @return {?}\n     */\n    detectChanges() {\n        this.changeDetectionScheduled = false;\n        this.appContext.runInNgZone(() => this.upgradedElements.forEach(ngElement => ngElement.detectChanges()));\n    }\n    /**\n     * @param {?} cb\n     * @return {?}\n     */\n    forEach(cb) {\n        return this.definitions.forEach(cb);\n    }\n    /**\n     * @template C, P\n     * @param {?} selector\n     * @return {?}\n     */\n    get(selector) {\n        return this.definitions.get(selector);\n    }\n    /**\n     * @return {?}\n     */\n    markDirty() {\n        if (!this.changeDetectionScheduled) {\n            this.changeDetectionScheduled = true;\n            scheduler.scheduleBeforeRender(() => this.detectChanges());\n        }\n    }\n    /**\n     * @param {?=} customElements\n     * @return {?}\n     */\n    register(customElements) {\n        if (!customElements && (typeof window !== 'undefined')) {\n            customElements = window.customElements;\n        }\n        if (!customElements) {\n            throwError('Custom Elements are not supported in this environment.');\n        }\n        this.definitions.forEach(def => /** @type {?} */ ((customElements)).define(def.is, def));\n    }\n    /**\n     * @param {?=} root\n     * @return {?}\n     */\n    upgradeAll(root = this.doc.documentElement) {\n        const /** @type {?} */ definitions = Array.from(this.definitions.values());\n        this.appContext.runInNgZone(() => {\n            this.traverseTree(root, (node) => {\n                const /** @type {?} */ nodeName = node.nodeName.toLowerCase();\n                definitions.some(def => {\n                    if (def.is === nodeName) {\n                        // TODO(gkalpak): What happens if `node` contains more custom elements\n                        //                (as projectable content)?\n                        def.upgrade(node, true);\n                        return true;\n                    }\n                    return false;\n                });\n            });\n        });\n    }\n    /**\n     * @param {?} appContext\n     * @param {?} resolver\n     * @param {?} componentType\n     * @return {?}\n     */\n    defineNgElement(appContext, resolver, componentType) {\n        const /** @type {?} */ componentFactory = resolver.resolveComponentFactory(componentType);\n        const /** @type {?} */ def = createNgElementConstructor(appContext, componentFactory);\n        const /** @type {?} */ selector = def.is;\n        if (this.definitions.has(selector)) {\n            throwError(`Defining an Angular custom element with selector '${selector}' is not allowed, ` +\n                'because one is already defined.');\n        }\n        def.onConnected.subscribe((ngElement) => this.upgradedElements.add(ngElement));\n        def.onDisconnected.subscribe((ngElement) => this.upgradedElements.delete(ngElement));\n        this.definitions.set(selector, def);\n    }\n    /**\n     * @param {?} root\n     * @param {?} cb\n     * @return {?}\n     */\n    traverseTree(root, cb) {\n        let /** @type {?} */ currentNode = root;\n        const /** @type {?} */ getNextNonDescendant = (node) => {\n            let /** @type {?} */ currNode = node;\n            let /** @type {?} */ nextNode = null;\n            while (!nextNode && currNode && (currNode !== root)) {\n                nextNode = currNode.nextElementSibling;\n                currNode = currNode.parentElement;\n            }\n            return nextNode;\n        };\n        while (currentNode) {\n            if (currentNode instanceof HTMLElement) {\n                cb(currentNode);\n            }\n            currentNode = currentNode.firstElementChild || getNextNonDescendant(currentNode);\n        }\n    }\n}\nfunction NgElements_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElements.prototype.doc;\n    /** @type {?} */\n    NgElements.prototype.definitions;\n    /** @type {?} */\n    NgElements.prototype.upgradedElements;\n    /** @type {?} */\n    NgElements.prototype.appContext;\n    /** @type {?} */\n    NgElements.prototype.changeDetectionScheduled;\n    /** @type {?} */\n    NgElements.prototype.moduleRef;\n}\n//# sourceMappingURL=ng-elements.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { NgElements } from \"./ng-elements\";\nimport { isFunction } from \"./utils\";\n/**\n * @template T\n * @param {?} customElementComponents\n * @param {?} platformRefOrBootstrapFn\n * @param {?=} moduleFactory\n * @return {?}\n */\nexport function registerAsCustomElements(customElementComponents, platformRefOrBootstrapFn, moduleFactory) {\n    const /** @type {?} */ bootstrapFn = isFunction(platformRefOrBootstrapFn) ?\n        platformRefOrBootstrapFn :\n        () => platformRefOrBootstrapFn.bootstrapModuleFactory(/** @type {?} */ ((moduleFactory)));\n    return bootstrapFn().then(moduleRef => {\n        const /** @type {?} */ ngElements = new NgElements(moduleRef, customElementComponents);\n        ngElements.register();\n        return moduleRef;\n    });\n}\n//# sourceMappingURL=register-as-custom-elements.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version } from \"@angular/core\";\n/**\n * \\@experimental\n */\nexport const /** @type {?} */ VERSION = new Version('5.1.0-beta.0-21bfaf2');\n//# sourceMappingURL=version.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { registerAsCustomElements } from \"./src/register-as-custom-elements\";\nexport { VERSION } from \"./src/version\";\n// This file only reexports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=public_api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { registerAsCustomElements, VERSION } from \"./public_api\";\n//# sourceMappingURL=elements.js.map"],"names":[],"mappings":"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"}