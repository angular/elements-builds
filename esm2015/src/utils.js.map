{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../packages/elements/src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ComponentFactoryResolver, Injector, Type} from '@angular/core';\n\nconst elProto = Element.prototype as any;\nconst matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n    elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n\n/**\n * Provide methods for scheduling the execution of a callback.\n */\nexport const scheduler = {\n  /**\n   * Schedule a callback to be called after some delay.\n   *\n   * Returns a function that when executed will cancel the scheduled function.\n   */\n  schedule(taskFn: () => void, delay: number): () =>\n      void{const id = setTimeout(taskFn, delay); return () => clearTimeout(id);},\n\n  /**\n   * Schedule a callback to be called before the next render.\n   * (If `window.requestAnimationFrame()` is not available, use `scheduler.schedule()` instead.)\n   *\n   * Returns a function that when executed will cancel the scheduled function.\n   */\n  scheduleBeforeRender(taskFn: () => void): () => void{\n    // TODO(gkalpak): Implement a better way of accessing `requestAnimationFrame()`\n    //                (e.g. accounting for vendor prefix, SSR-compatibility, etc).\n    if (typeof window === 'undefined') {\n      // For SSR just schedule immediately.\n      return scheduler.schedule(taskFn, 0);\n    }\n\n    if (typeof window.requestAnimationFrame === 'undefined') {\n      const frameMs = 16;\n      return scheduler.schedule(taskFn, frameMs);\n    }\n\n    const id = window.requestAnimationFrame(taskFn);\n    return () => window.cancelAnimationFrame(id);\n  },\n};\n\n/**\n * Convert a camelCased string to kebab-cased.\n */\nexport function camelToDashCase(input: string): string {\n  return input.replace(/[A-Z]/g, char => `-${char.toLowerCase()}`);\n}\n\n/**\n * Create a `CustomEvent` (even on browsers where `CustomEvent` is not a constructor).\n */\nexport function createCustomEvent(doc: Document, name: string, detail: any): CustomEvent {\n  const bubbles = false;\n  const cancelable = false;\n\n  // On IE9-11, `CustomEvent` is not a constructor.\n  if (typeof CustomEvent !== 'function') {\n    const event = doc.createEvent('CustomEvent');\n    event.initCustomEvent(name, bubbles, cancelable, detail);\n    return event;\n  }\n\n  return new CustomEvent(name, {bubbles, cancelable, detail});\n}\n\n/**\n * Check whether the input is an `Element`.\n */\nexport function isElement(node: Node): node is Element {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n\n/**\n * Check whether the input is a function.\n */\nexport function isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n\n/**\n * Convert a kebab-cased string to camelCased.\n */\nexport function kebabToCamelCase(input: string): string {\n  return input.replace(/-([a-z\\d])/g, (_, char) => char.toUpperCase());\n}\n\n/**\n * Check whether an `Element` matches a CSS selector.\n */\nexport function matchesSelector(element: Element, selector: string): boolean {\n  return matches.call(element, selector);\n}\n\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n */\nexport function strictEquals(value1: any, value2: any): boolean {\n  return value1 === value2 || (value1 !== value1 && value2 !== value2);\n}\n\n/** Gets a map of default set of attributes to observe and the properties they affect. */\nexport function getDefaultAttributeToPropertyInputs(\n    inputs: {propName: string, templateName: string}[]) {\n  const attributeToPropertyInputs: {[key: string]: string} = {};\n  inputs.forEach(({propName, templateName}) => {\n    attributeToPropertyInputs[camelToDashCase(templateName)] = propName;\n  });\n\n  return attributeToPropertyInputs;\n}\n\n/**\n * Gets a component's set of inputs. Uses the injector to get the component factory where the inputs\n * are defined.\n */\nexport function getComponentInputs(\n    component: Type<any>, injector: Injector): {propName: string, templateName: string}[] {\n  const componentFactoryResolver: ComponentFactoryResolver = injector.get(ComponentFactoryResolver);\n  const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n  return componentFactory.inputs;\n}\n"]}