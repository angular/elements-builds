{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/elements/bundles/elements.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","elements","platformBrowser","core","this","_angular_platformBrowser","_angular_core","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","camelToKebabCase","input","replace","char","toLowerCase","createCustomEvent","doc","name","detail","CustomEvent","event_1","createEvent","initCustomEvent","bubbles","cancelable","getComponentName","component","overriddenName","toString","split","isElement","node","nodeType","Node","ELEMENT_NODE","isFunction","value","matchesSelector","element","selector","matches","call","strictEquals","value1","value2","throwError","message","Error","extractProjectableNodes","host","ngContentSelectors","nodes","childNodes","projectableNodes","map","wildcardIndex","some","i","ii","length","ngContentIndex","findMatchingIndex","push","selectors","defaultIndex","matchingIndex","createNgElementConstructor","appContext","componentFactory","isPotentialCustomElementName","inputs","_a","propName","attrName","templateName","outputs","eventName","NgElementConstructorImpl","_super","_this","ngElement","onConnected","subscribe","emit","onDisconnected","upgrade","ignoreUpgraded","setHost","connectedCallback","is","observedAttributes","EventEmitter","NgElementImpl","forEach","defineProperty","get","getInputValue","set","newValue","setInputValue","configurable","enumerable","PCEN_RE","test","PCEN_BLACKLIST","indexOf","registerAsCustomElements","customElementComponents","platformRefOrBootstrapFn","moduleFactory","bootstrapModuleFactory","then","moduleRef","NgElements","register","setPrototypeOf","__proto__","Array","p","hasOwnProperty","NgElementApplicationContext","injector","applicationRef","ApplicationRef","ngZone","NgZone","runInNgZone","cb","run","elProto","Element","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","scheduler","schedule","delay","id","window","setTimeout","clearTimeout","scheduleBeforeRender","requestAnimationFrame","cancelAnimationFrame","componentRef","componentName","componentType","initialInputValues","Map","uninitializedInputs","Set","outputSubscriptions","inputChanges","implementsOnChanges","changeDetectionScheduled","lifecyclePhase","cancelDestruction","attributeChangedCallback","oldValue","namespace","find","assertNotInPhase","existingNgElement","existingComponentName","nodeName","cThis","childInjector","Injector","ngOnChanges","initializeInputs","initializeOutputs","detectChanges","attachView","hostView","detach","disconnectedCallback","callNgOnChanges","changeDetectorRef","doDestroy","destroy","DESTROY_DELAY","getHost","markDirty","recordInputChange","phase","caller","output","unsubscribeFromOutput","innerHTML","dispatchCustomEvent","event","ownerDocument","dispatchEvent","initialValue","has","hasAttribute","getAttribute","add","clear","subscribeToOutput","currentValue","pendingChange","isFirstChange","previousValue","undefined","SimpleChange","delete","emitter","subscription","unsubscribe","HTMLElement","pcenChar","flags","RegExp","DOCUMENT","definitions","upgradedElements","resolver","componentFactoryResolver","defineNgElement","detachAll","root","documentElement","from","values","elementsToDetach","traverseTree","reverse","customElements","def","upgradeAll","resolveComponentFactory","currentNode","firstElementChild","currNode","nextNode","nextElementSibling","parentElement","VERSION","Version"],"mappings":"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","file":"/home/travis/build/angular/angular/dist/packages-dist/elements/bundles/elements.umd.min.js","sourcesContent":["/**\n * @license Angular v5.1.0-beta.0-21bfaf2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/platform-browser'), require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/elements', ['exports', '@angular/platform-browser', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.elements = {}),global.ng.platformBrowser,global.ng.core));\n}(this, (function (exports,_angular_platformBrowser,_angular_core) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/**\n * @license Angular v5.1.0-beta.0-21bfaf2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgElementApplicationContext = (function () {\n    function NgElementApplicationContext(injector) {\n        this.injector = injector;\n        this.applicationRef = this.injector.get(_angular_core.ApplicationRef);\n        this.ngZone = this.injector.get(_angular_core.NgZone);\n    }\n    /**\n     * @template R\n     * @param {?} cb\n     * @return {?}\n     */\n    NgElementApplicationContext.prototype.runInNgZone = /**\n     * @template R\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) { return this.ngZone.run(cb); };\n    return NgElementApplicationContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar elProto = /** @type {?} */ (Element.prototype);\nvar matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n    elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n/**\n * Provide methods for scheduling the execution of a callback.\n */\nvar scheduler = {\n    /**\n     * Schedule a callback to be called after some delay.\n     */\n    schedule: /**\n     * Schedule a callback to be called after some delay.\n     * @param {?} cb\n     * @param {?} delay\n     * @return {?}\n     */\n    function (cb, delay) { var /** @type {?} */ id = window.setTimeout(cb, delay); return function () { return window.clearTimeout(id); }; },\n    /**\n     * Schedule a callback to be called before the next render.\n     * (If `window.requestAnimationFrame()` is not available, use `scheduler.schedule()` instead.)\n     */\n    scheduleBeforeRender: /**\n     * Schedule a callback to be called before the next render.\n     * (If `window.requestAnimationFrame()` is not available, use `scheduler.schedule()` instead.)\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        // TODO(gkalpak): Implement a better way of accessing `requestAnimationFrame()`\n        //                (e.g. accounting for vendor prefix, SSR-compatibility, etc).\n        if (typeof window.requestAnimationFrame === 'undefined') {\n            return scheduler.schedule(cb, 16);\n        }\n        var /** @type {?} */ id = window.requestAnimationFrame(cb);\n        return function () { return window.cancelAnimationFrame(id); };\n    },\n};\n/**\n * Convert a camelCased string to kebab-cased.\n * @param {?} input\n * @return {?}\n */\nfunction camelToKebabCase(input) {\n    return input.replace(/[A-Z]/g, function (char) { return \"-\" + char.toLowerCase(); });\n}\n/**\n * Create a `CustomEvent` (even on browsers where `CustomEvent` is not a constructor).\n * @param {?} doc\n * @param {?} name\n * @param {?} detail\n * @return {?}\n */\nfunction createCustomEvent(doc, name, detail) {\n    var /** @type {?} */ bubbles = false;\n    var /** @type {?} */ cancelable = false;\n    // On IE9-11, `CustomEvent` is not a constructor.\n    if (typeof CustomEvent !== 'function') {\n        var /** @type {?} */ event_1 = doc.createEvent('CustomEvent');\n        event_1.initCustomEvent(name, bubbles, cancelable, detail);\n        return event_1;\n    }\n    return new CustomEvent(name, { bubbles: bubbles, cancelable: cancelable, detail: detail });\n}\n/**\n * Return the name of the component or the first line of its stringified version.\n * @param {?} component\n * @return {?}\n */\nfunction getComponentName(component) {\n    return (/** @type {?} */ (component)).overriddenName || component.name ||\n        component.toString().split('\\n', 1)[0];\n}\n/**\n * Check whether the input is an `Element`.\n * @param {?} node\n * @return {?}\n */\nfunction isElement(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Check whether the input is a function.\n * @param {?} value\n * @return {?}\n */\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * Convert a kebab-cased string to camelCased.\n * @param {?} input\n * @return {?}\n */\n\n/**\n * Check whether an `Element` matches a CSS selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction matchesSelector(element, selector) {\n    return matches.call(element, selector);\n}\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n * @param {?} value1\n * @param {?} value2\n * @return {?}\n */\nfunction strictEquals(value1, value2) {\n    return value1 === value2 || (value1 !== value1 && value2 !== value2);\n}\n/**\n * Throw an error with the specified message.\n * (It provides a centralized place where it is easy to apply some change/behavior to all errors.)\n * @param {?} message\n * @return {?}\n */\nfunction throwError(message) {\n    throw Error(message);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// NOTE: This is a (slightly improved) version of what is used in ngUpgrade's\n//       `DowngradeComponentAdapter`.\n// TODO(gkalpak): Investigate if it makes sense to share the code.\n/**\n * @param {?} host\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction extractProjectableNodes(host, ngContentSelectors) {\n    var /** @type {?} */ nodes = host.childNodes;\n    var /** @type {?} */ projectableNodes = ngContentSelectors.map(function () { return []; });\n    var /** @type {?} */ wildcardIndex = -1;\n    ngContentSelectors.some(function (selector, i) {\n        if (selector === '*') {\n            wildcardIndex = i;\n            return true;\n        }\n        return false;\n    });\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = nodes.length; i < ii; ++i) {\n        var /** @type {?} */ node = nodes[i];\n        var /** @type {?} */ ngContentIndex = findMatchingIndex(node, ngContentSelectors, wildcardIndex);\n        if (ngContentIndex !== -1) {\n            projectableNodes[ngContentIndex].push(node);\n        }\n    }\n    return projectableNodes;\n}\n/**\n * @param {?} node\n * @param {?} selectors\n * @param {?} defaultIndex\n * @return {?}\n */\nfunction findMatchingIndex(node, selectors, defaultIndex) {\n    var /** @type {?} */ matchingIndex = defaultIndex;\n    if (isElement(node)) {\n        selectors.some(function (selector, i) {\n            if ((selector !== '*') && matchesSelector(node, selector)) {\n                matchingIndex = i;\n                return true;\n            }\n            return false;\n        });\n    }\n    return matchingIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * TODO(gkalpak): Add docs.\n * \\@experimental\n * @record\n */\n\n/**\n * Represents an `NgElement` input.\n * Similar to a `ComponentFactory` input (`{propName: string, templateName: string}`),\n * except that `attrName` is derived by kebab-casing `templateName`.\n * @record\n */\n\n/**\n * Represents an `NgElement` input.\n * Similar to a `ComponentFactory` output (`{propName: string, templateName: string}`),\n * except that `templateName` is renamed to `eventName`.\n * @record\n */\n\n/**\n * @abstract\n */\nvar NgElementImpl = (function (_super) {\n    __extends(NgElementImpl, _super);\n    function NgElementImpl(appContext, componentFactory, inputs, outputs) {\n        var _this = _super.call(this) || this;\n        _this.appContext = appContext;\n        _this.componentFactory = componentFactory;\n        _this.inputs = inputs;\n        _this.outputs = outputs;\n        _this.ngElement = null;\n        _this.componentRef = null;\n        _this.onConnected = new _angular_core.EventEmitter();\n        _this.onDisconnected = new _angular_core.EventEmitter();\n        _this.host = /** @type {?} */ (_this);\n        _this.componentName = getComponentName(_this.componentFactory.componentType);\n        _this.initialInputValues = new Map();\n        _this.uninitializedInputs = new Set();\n        _this.outputSubscriptions = new Map();\n        _this.inputChanges = null;\n        _this.implementsOnChanges = false;\n        _this.changeDetectionScheduled = false;\n        _this.lifecyclePhase = \"unconnected\" /* unconnected */;\n        _this.cancelDestruction = null;\n        return _this;\n    }\n    /**\n     * @param {?} attrName\n     * @param {?} oldValue\n     * @param {?} newValue\n     * @param {?=} namespace\n     * @return {?}\n     */\n    NgElementImpl.prototype.attributeChangedCallback = /**\n     * @param {?} attrName\n     * @param {?} oldValue\n     * @param {?} newValue\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (attrName, oldValue, newValue, namespace) {\n        var /** @type {?} */ input = /** @type {?} */ ((this.inputs.find(function (input) { return input.attrName === attrName; })));\n        if (input) {\n            this.setInputValue(input.propName, newValue);\n        }\n        else {\n            throwError(\"Calling 'attributeChangedCallback()' with unknown attribute '\" + attrName + \"' \" +\n                (\"on component '\" + this.componentName + \"' is not allowed.\"));\n        }\n    };\n    /**\n     * @param {?=} ignoreUpgraded\n     * @return {?}\n     */\n    NgElementImpl.prototype.connectedCallback = /**\n     * @param {?=} ignoreUpgraded\n     * @return {?}\n     */\n    function (ignoreUpgraded) {\n        var _this = this;\n        if (ignoreUpgraded === void 0) { ignoreUpgraded = false; }\n        this.assertNotInPhase(\"disconnected\" /* disconnected */, 'connectedCallback');\n        if (this.cancelDestruction !== null) {\n            this.cancelDestruction();\n            this.cancelDestruction = null;\n        }\n        if (this.lifecyclePhase === \"connected\" /* connected */) {\n            return;\n        }\n        var /** @type {?} */ host = /** @type {?} */ (this.host);\n        if (host.ngElement) {\n            if (ignoreUpgraded) {\n                return;\n            }\n            var /** @type {?} */ existingNgElement = (/** @type {?} */ (host)).ngElement;\n            var /** @type {?} */ existingComponentName = getComponentName(existingNgElement.componentRef.componentType);\n            throwError(\"Upgrading '\" + this.host.nodeName + \"' element to component '\" + this.componentName + \"' is not allowed, \" +\n                (\"because the element is already upgraded to component '\" + existingComponentName + \"'.\"));\n        }\n        this.appContext.runInNgZone(function () {\n            _this.lifecyclePhase = \"connected\" /* connected */;\n            var /** @type {?} */ cThis = (/** @type {?} */ ((_this)));\n            var /** @type {?} */ childInjector = _angular_core.Injector.create([], cThis.appContext.injector);\n            var /** @type {?} */ projectableNodes = extractProjectableNodes(cThis.host, cThis.componentFactory.ngContentSelectors);\n            cThis.componentRef =\n                cThis.componentFactory.create(childInjector, projectableNodes, cThis.host);\n            cThis.implementsOnChanges =\n                isFunction((/** @type {?} */ ((cThis.componentRef.instance))).ngOnChanges);\n            cThis.initializeInputs();\n            cThis.initializeOutputs();\n            cThis.detectChanges();\n            cThis.appContext.applicationRef.attachView(cThis.componentRef.hostView);\n            // Ensure `ngElement` is set on the host too (even for manually upgraded elements)\n            // in order to be able to detect that the element has been been upgraded.\n            cThis.ngElement = host.ngElement = cThis;\n            cThis.onConnected.emit();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgElementImpl.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this.disconnectedCallback(); };\n    /**\n     * @return {?}\n     */\n    NgElementImpl.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.lifecyclePhase === \"disconnected\" /* disconnected */) {\n            return;\n        }\n        this.assertNotInPhase(\"unconnected\" /* unconnected */, 'detectChanges');\n        this.appContext.runInNgZone(function () {\n            var /** @type {?} */ cThis = /** @type {?} */ ((_this));\n            cThis.changeDetectionScheduled = false;\n            cThis.callNgOnChanges();\n            cThis.componentRef.changeDetectorRef.detectChanges();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgElementImpl.prototype.disconnectedCallback = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.lifecyclePhase === \"disconnected\" /* disconnected */ ||\n            this.cancelDestruction !== null) {\n            return;\n        }\n        this.assertNotInPhase(\"unconnected\" /* unconnected */, 'disconnectedCallback');\n        var /** @type {?} */ doDestroy = function () { return _this.appContext.runInNgZone(function () { return _this.destroy(); }); };\n        this.cancelDestruction = scheduler.schedule(doDestroy, NgElementImpl.DESTROY_DELAY);\n    };\n    /**\n     * @return {?}\n     */\n    NgElementImpl.prototype.getHost = /**\n     * @return {?}\n     */\n    function () { return this.host; };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    NgElementImpl.prototype.getInputValue = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        this.assertNotInPhase(\"disconnected\" /* disconnected */, 'getInputValue');\n        if (this.lifecyclePhase === \"unconnected\" /* unconnected */) {\n            return this.initialInputValues.get(propName);\n        }\n        var /** @type {?} */ cThis = /** @type {?} */ ((this));\n        return (/** @type {?} */ (cThis.componentRef.instance))[propName];\n    };\n    /**\n     * @return {?}\n     */\n    NgElementImpl.prototype.markDirty = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.changeDetectionScheduled) {\n            this.changeDetectionScheduled = true;\n            scheduler.scheduleBeforeRender(function () { return _this.detectChanges(); });\n        }\n    };\n    /**\n     * @param {?} host\n     * @return {?}\n     */\n    NgElementImpl.prototype.setHost = /**\n     * @param {?} host\n     * @return {?}\n     */\n    function (host) {\n        this.assertNotInPhase(\"connected\" /* connected */, 'setHost');\n        this.assertNotInPhase(\"disconnected\" /* disconnected */, 'setHost');\n        this.host = host;\n    };\n    /**\n     * @param {?} propName\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgElementImpl.prototype.setInputValue = /**\n     * @param {?} propName\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (propName, newValue) {\n        this.assertNotInPhase(\"disconnected\" /* disconnected */, 'setInputValue');\n        if (this.lifecyclePhase === \"unconnected\" /* unconnected */) {\n            this.initialInputValues.set(propName, newValue);\n            return;\n        }\n        var /** @type {?} */ cThis = /** @type {?} */ ((this));\n        if (!strictEquals(newValue, cThis.getInputValue(propName))) {\n            cThis.recordInputChange(propName, newValue);\n            (/** @type {?} */ (cThis.componentRef.instance))[propName] = newValue;\n            cThis.markDirty();\n        }\n    };\n    /**\n     * @param {?} phase\n     * @param {?} caller\n     * @return {?}\n     */\n    NgElementImpl.prototype.assertNotInPhase = /**\n     * @param {?} phase\n     * @param {?} caller\n     * @return {?}\n     */\n    function (phase, caller) {\n        if (this.lifecyclePhase === phase) {\n            throwError(\"Calling '\" + caller + \"()' on \" + phase + \" component '\" + this.componentName + \"' is not allowed.\");\n        }\n    };\n    /**\n     * @this {?}\n     * @return {?}\n     */\n    NgElementImpl.prototype.callNgOnChanges = /**\n     * @this {?}\n     * @return {?}\n     */\n    function () {\n        if (this.implementsOnChanges && this.inputChanges !== null) {\n            var /** @type {?} */ inputChanges = this.inputChanges;\n            this.inputChanges = null;\n            (/** @type {?} */ ((this.componentRef.instance))).ngOnChanges(inputChanges);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgElementImpl.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ cThis = /** @type {?} */ ((this));\n        cThis.componentRef.destroy();\n        cThis.outputs.forEach(function (output) { return cThis.unsubscribeFromOutput(output); });\n        this.ngElement = (/** @type {?} */ (this.host)).ngElement = null;\n        cThis.host.innerHTML = '';\n        cThis.lifecyclePhase = \"disconnected\" /* disconnected */;\n        cThis.onDisconnected.emit();\n    };\n    /**\n     * @param {?} eventName\n     * @param {?} value\n     * @return {?}\n     */\n    NgElementImpl.prototype.dispatchCustomEvent = /**\n     * @param {?} eventName\n     * @param {?} value\n     * @return {?}\n     */\n    function (eventName, value) {\n        var /** @type {?} */ event = createCustomEvent(this.host.ownerDocument, eventName, value);\n        this.dispatchEvent(event);\n        if (this.host !== this) {\n            this.host.dispatchEvent(event);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgElementImpl.prototype.initializeInputs = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.inputs.forEach(function (_a) {\n            var propName = _a.propName, attrName = _a.attrName;\n            var /** @type {?} */ initialValue;\n            if (_this.initialInputValues.has(propName)) {\n                // The property has already been set (prior to initialization).\n                // Update the component instance.\n                initialValue = _this.initialInputValues.get(propName);\n            }\n            else if (_this.host.hasAttribute(attrName)) {\n                // A matching attribute exists.\n                // Update the component instance.\n                initialValue = _this.host.getAttribute(attrName);\n            }\n            else {\n                // The property does not have an initial value.\n                // The property does not have an initial value.\n                _this.uninitializedInputs.add(propName);\n            }\n            if (!_this.uninitializedInputs.has(propName)) {\n                // The property does have an initial value.\n                // Forward it to the component instance.\n                // The property does have an initial value.\n                // Forward it to the component instance.\n                _this.setInputValue(propName, initialValue);\n            }\n        });\n        this.initialInputValues.clear();\n    };\n    /**\n     * @this {?}\n     * @return {?}\n     */\n    NgElementImpl.prototype.initializeOutputs = /**\n     * @this {?}\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.outputs.forEach(function (output) { return _this.subscribeToOutput(output); });\n    };\n    /**\n     * @param {?} propName\n     * @param {?} currentValue\n     * @return {?}\n     */\n    NgElementImpl.prototype.recordInputChange = /**\n     * @param {?} propName\n     * @param {?} currentValue\n     * @return {?}\n     */\n    function (propName, currentValue) {\n        if (!this.implementsOnChanges) {\n            // The component does not implement `OnChanges`. Ignore the change.\n            return;\n        }\n        if (this.inputChanges === null) {\n            this.inputChanges = {};\n        }\n        var /** @type {?} */ pendingChange = this.inputChanges[propName];\n        if (pendingChange) {\n            pendingChange.currentValue = currentValue;\n            return;\n        }\n        var /** @type {?} */ isFirstChange = this.uninitializedInputs.has(propName);\n        var /** @type {?} */ previousValue = isFirstChange ? undefined : this.getInputValue(propName);\n        this.inputChanges[propName] = new _angular_core.SimpleChange(previousValue, currentValue, isFirstChange);\n        if (isFirstChange) {\n            this.uninitializedInputs.delete(propName);\n        }\n    };\n    /**\n     * @this {?}\n     * @param {?} output\n     * @return {?}\n     */\n    NgElementImpl.prototype.subscribeToOutput = /**\n     * @this {?}\n     * @param {?} output\n     * @return {?}\n     */\n    function (output) {\n        var _this = this;\n        var propName = output.propName, eventName = output.eventName;\n        var /** @type {?} */ emitter = /** @type {?} */ ((/** @type {?} */ (this.componentRef.instance))[output.propName]);\n        if (!emitter) {\n            throwError(\"Missing emitter '\" + propName + \"' on component '\" + this.componentName + \"'.\");\n        }\n        this.unsubscribeFromOutput(output);\n        var /** @type {?} */ subscription = emitter.subscribe(function (value) { return _this.dispatchCustomEvent(eventName, value); });\n        this.outputSubscriptions.set(propName, subscription);\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    NgElementImpl.prototype.unsubscribeFromOutput = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var propName = _a.propName;\n        if (!this.outputSubscriptions.has(propName)) {\n            return;\n        }\n        var /** @type {?} */ subscription = /** @type {?} */ ((this.outputSubscriptions.get(propName)));\n        this.outputSubscriptions.delete(propName);\n        subscription.unsubscribe();\n    };\n    NgElementImpl.DESTROY_DELAY = 10;\n    return NgElementImpl;\n}(HTMLElement));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * TODO(gkalpak): Add docs.\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n// For more info on `PotentialCustomElementName` rules see:\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nvar PCEN_RE = createPcenRe();\nvar PCEN_BLACKLIST = [\n    'annotation-xml',\n    'color-profile',\n    'font-face',\n    'font-face-src',\n    'font-face-uri',\n    'font-face-format',\n    'font-face-name',\n    'missing-glyph',\n];\n/**\n * @template T, P\n * @param {?} appContext\n * @param {?} componentFactory\n * @return {?}\n */\nfunction createNgElementConstructor(appContext, componentFactory) {\n    var /** @type {?} */ selector = componentFactory.selector;\n    if (!isPotentialCustomElementName(selector)) {\n        throwError(\"Using '\" + selector + \"' as a custom element name is not allowed. \" +\n            'See https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name for more info.');\n    }\n    var /** @type {?} */ inputs = componentFactory.inputs.map(function (_a) {\n        var propName = _a.propName, templateName = _a.templateName;\n        return ({\n            propName: propName,\n            attrName: camelToKebabCase(templateName),\n        });\n    });\n    var /** @type {?} */ outputs = componentFactory.outputs.map(function (_a) {\n        var propName = _a.propName, templateName = _a.templateName;\n        return ({\n            propName: propName,\n            // TODO(gkalpak): Verify this is what we want and document.\n            eventName: templateName,\n        });\n    });\n    var NgElementConstructorImpl = (function (_super) {\n        __extends(NgElementConstructorImpl, _super);\n        function NgElementConstructorImpl() {\n            var _this = _super.call(this, appContext, componentFactory, inputs, outputs) || this;\n            var /** @type {?} */ ngElement = /** @type {?} */ (_this);\n            _this.onConnected.subscribe(function () { return NgElementConstructorImpl.onConnected.emit(ngElement); });\n            _this.onDisconnected.subscribe(function () { return NgElementConstructorImpl.onDisconnected.emit(ngElement); });\n            return _this;\n        }\n        /**\n         * @param {?} host\n         * @param {?=} ignoreUpgraded\n         * @return {?}\n         */\n        NgElementConstructorImpl.upgrade = /**\n         * @param {?} host\n         * @param {?=} ignoreUpgraded\n         * @return {?}\n         */\n        function (host, ignoreUpgraded) {\n            if (ignoreUpgraded === void 0) { ignoreUpgraded = false; }\n            var /** @type {?} */ ngElement = new NgElementConstructorImpl();\n            ngElement.setHost(host);\n            ngElement.connectedCallback(ignoreUpgraded);\n            return /** @type {?} */ (ngElement);\n        };\n        NgElementConstructorImpl.is = selector;\n        NgElementConstructorImpl.observedAttributes = inputs.map(function (input) { return input.attrName; });\n        NgElementConstructorImpl.onConnected = new _angular_core.EventEmitter();\n        NgElementConstructorImpl.onDisconnected = new _angular_core.EventEmitter();\n        return NgElementConstructorImpl;\n    }(NgElementImpl));\n    inputs.forEach(function (_a) {\n        var propName = _a.propName;\n        Object.defineProperty(NgElementConstructorImpl.prototype, propName, {\n            get: function () { return this.getInputValue(propName); },\n            set: function (newValue) {\n                this.setInputValue(propName, newValue);\n            },\n            configurable: true,\n            enumerable: true,\n        });\n    });\n    return /** @type {?} */ (NgElementConstructorImpl);\n}\n/**\n * @return {?}\n */\nfunction createPcenRe() {\n    // According to [the\n    // spec](https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name),\n    // `pcenChar` is allowed to contain Unicode characters in the 10000-EFFFF range. But in order to\n    // match this characters with a RegExp, we need the implementation to support the `u` flag.\n    // On browsers that do not support it, valid PotentialCustomElementNames using characters in the\n    // 10000-EFFFF range will still cause an error (but these characters are not expected to be used\n    // in practice).\n    var /** @type {?} */ pcenChar = '-.0-9_a-z\\\\u00B7\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u037D\\\\u037F-\\\\u1FFF' +\n        '\\\\u200C-\\\\u200D\\\\u203F-\\\\u2040\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF' +\n        '\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n    var /** @type {?} */ flags = '';\n    if (RegExp.prototype.hasOwnProperty('unicode')) {\n        pcenChar += '\\\\u{10000}-\\\\u{EFFFF}';\n        flags += 'u';\n    }\n    return RegExp(\"^[a-z][\" + pcenChar + \"]*-[\" + pcenChar + \"]*$\", flags);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isPotentialCustomElementName(name) {\n    return PCEN_RE.test(name) && (PCEN_BLACKLIST.indexOf(name) === -1);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * TODO(gkalpak): Add docs.\n * \\@experimental\n */\nvar NgElements = (function () {\n    function NgElements(moduleRef, customElementComponents) {\n        var _this = this;\n        this.moduleRef = moduleRef;\n        this.doc = this.moduleRef.injector.get(_angular_platformBrowser.DOCUMENT);\n        this.definitions = new Map();\n        this.upgradedElements = new Set();\n        this.appContext = new NgElementApplicationContext(this.moduleRef.injector);\n        this.changeDetectionScheduled = false;\n        var /** @type {?} */ resolver = moduleRef.componentFactoryResolver;\n        customElementComponents.forEach(function (componentType) { return _this.defineNgElement(_this.appContext, resolver, componentType); });\n    }\n    /**\n     * @param {?=} root\n     * @return {?}\n     */\n    NgElements.prototype.detachAll = /**\n     * @param {?=} root\n     * @return {?}\n     */\n    function (root) {\n        if (root === void 0) { root = this.doc.documentElement; }\n        var /** @type {?} */ upgradedElements = Array.from(this.upgradedElements.values());\n        var /** @type {?} */ elementsToDetach = [];\n        this.traverseTree(root, function (node) {\n            upgradedElements.some(function (ngElement) {\n                if (ngElement.getHost() === node) {\n                    elementsToDetach.push(ngElement);\n                    return true;\n                }\n                return false;\n            });\n        });\n        // Detach in reverse traversal order.\n        this.appContext.runInNgZone(function () { return elementsToDetach.reverse().forEach(function (ngElement) { return ngElement.detach(); }); });\n    };\n    /**\n     * @return {?}\n     */\n    NgElements.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.changeDetectionScheduled = false;\n        this.appContext.runInNgZone(function () { return _this.upgradedElements.forEach(function (ngElement) { return ngElement.detectChanges(); }); });\n    };\n    /**\n     * @param {?} cb\n     * @return {?}\n     */\n    NgElements.prototype.forEach = /**\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        return this.definitions.forEach(cb);\n    };\n    /**\n     * @template C, P\n     * @param {?} selector\n     * @return {?}\n     */\n    NgElements.prototype.get = /**\n     * @template C, P\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return this.definitions.get(selector);\n    };\n    /**\n     * @return {?}\n     */\n    NgElements.prototype.markDirty = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.changeDetectionScheduled) {\n            this.changeDetectionScheduled = true;\n            scheduler.scheduleBeforeRender(function () { return _this.detectChanges(); });\n        }\n    };\n    /**\n     * @param {?=} customElements\n     * @return {?}\n     */\n    NgElements.prototype.register = /**\n     * @param {?=} customElements\n     * @return {?}\n     */\n    function (customElements) {\n        if (!customElements && (typeof window !== 'undefined')) {\n            customElements = window.customElements;\n        }\n        if (!customElements) {\n            throwError('Custom Elements are not supported in this environment.');\n        }\n        this.definitions.forEach(function (def) { return /** @type {?} */ ((customElements)).define(def.is, def); });\n    };\n    /**\n     * @param {?=} root\n     * @return {?}\n     */\n    NgElements.prototype.upgradeAll = /**\n     * @param {?=} root\n     * @return {?}\n     */\n    function (root) {\n        var _this = this;\n        if (root === void 0) { root = this.doc.documentElement; }\n        var /** @type {?} */ definitions = Array.from(this.definitions.values());\n        this.appContext.runInNgZone(function () {\n            _this.traverseTree(root, function (node) {\n                var /** @type {?} */ nodeName = node.nodeName.toLowerCase();\n                definitions.some(function (def) {\n                    if (def.is === nodeName) {\n                        // TODO(gkalpak): What happens if `node` contains more custom elements\n                        //                (as projectable content)?\n                        def.upgrade(node, true);\n                        return true;\n                    }\n                    return false;\n                });\n            });\n        });\n    };\n    /**\n     * @param {?} appContext\n     * @param {?} resolver\n     * @param {?} componentType\n     * @return {?}\n     */\n    NgElements.prototype.defineNgElement = /**\n     * @param {?} appContext\n     * @param {?} resolver\n     * @param {?} componentType\n     * @return {?}\n     */\n    function (appContext, resolver, componentType) {\n        var _this = this;\n        var /** @type {?} */ componentFactory = resolver.resolveComponentFactory(componentType);\n        var /** @type {?} */ def = createNgElementConstructor(appContext, componentFactory);\n        var /** @type {?} */ selector = def.is;\n        if (this.definitions.has(selector)) {\n            throwError(\"Defining an Angular custom element with selector '\" + selector + \"' is not allowed, \" +\n                'because one is already defined.');\n        }\n        def.onConnected.subscribe(function (ngElement) { return _this.upgradedElements.add(ngElement); });\n        def.onDisconnected.subscribe(function (ngElement) { return _this.upgradedElements.delete(ngElement); });\n        this.definitions.set(selector, def);\n    };\n    /**\n     * @param {?} root\n     * @param {?} cb\n     * @return {?}\n     */\n    NgElements.prototype.traverseTree = /**\n     * @param {?} root\n     * @param {?} cb\n     * @return {?}\n     */\n    function (root, cb) {\n        var /** @type {?} */ currentNode = root;\n        var /** @type {?} */ getNextNonDescendant = function (node) {\n            var /** @type {?} */ currNode = node;\n            var /** @type {?} */ nextNode = null;\n            while (!nextNode && currNode && (currNode !== root)) {\n                nextNode = currNode.nextElementSibling;\n                currNode = currNode.parentElement;\n            }\n            return nextNode;\n        };\n        while (currentNode) {\n            if (currentNode instanceof HTMLElement) {\n                cb(currentNode);\n            }\n            currentNode = currentNode.firstElementChild || getNextNonDescendant(currentNode);\n        }\n    };\n    return NgElements;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @template T\n * @param {?} customElementComponents\n * @param {?} platformRefOrBootstrapFn\n * @param {?=} moduleFactory\n * @return {?}\n */\nfunction registerAsCustomElements(customElementComponents, platformRefOrBootstrapFn, moduleFactory) {\n    var /** @type {?} */ bootstrapFn = isFunction(platformRefOrBootstrapFn) ?\n        platformRefOrBootstrapFn :\n        function () { return platformRefOrBootstrapFn.bootstrapModuleFactory(/** @type {?} */ ((moduleFactory))); };\n    return bootstrapFn().then(function (moduleRef) {\n        var /** @type {?} */ ngElements = new NgElements(moduleRef, customElementComponents);\n        ngElements.register();\n        return moduleRef;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental\n */\nvar VERSION = new _angular_core.Version('5.1.0-beta.0-21bfaf2');\n\nexports.registerAsCustomElements = registerAsCustomElements;\nexports.VERSION = VERSION;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=elements.umd.js.map\n"]}