{"version":3,"sources":["packages/elements/elements.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","elements","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","elProto","matches","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","scheduler","schedule","taskFn","delay","id","setTimeout","clearTimeout","scheduleBeforeRender","window","requestAnimationFrame","cancelAnimationFrame","findMatchingIndex","node","selectors","defaultIndex","matchingIndex","isElement","nodeType","Node","ELEMENT_NODE","some","selector","element","ComponentNgElementStrategyFactory","component","injector","componentFactory","get","ComponentFactoryResolver","resolveComponentFactory","ComponentNgElementStrategy","componentRef","inputChanges","implementsOnChanges","scheduledChangeDetectionFn","scheduledDestroyFn","initialInputValues","Map","unchangedInputs","Set","connect","initializeComponent","disconnect","_this","destroy","getInputValue","property","instance","setInputValue","strictEquals","value1","value2","undefined","has","recordInputChange","scheduleDetectChanges","set","childInjector","Injector","providers","parent","projectableNodes","extractProjectableNodes","host","ngContentSelectors","nodes","childNodes","map","wildcardIndex","ii","length","ngContentIndex","isFunction","ngOnChanges","initializeInputs","initializeOutputs","detectChanges","ApplicationRef","attachView","hostView","inputs","forEach","_a","propName","add","clear","eventEmitters","outputs","templateName","pipe","name","events","merge","apply","__spread","arguments","concat","callNgOnChanges","currentValue","pendingChange","isFirstChange","delete","previousValue","SimpleChange","changeDetectorRef","NgElement","_super","ngElementEventsSubscription","HTMLElement","defineInputGettersSetters","target","defineProperty","ngElementStrategy","newValue","configurable","enumerable","VERSION","Version","createCustomElement","config","getComponentInputs","strategyFactory","attributeToPropertyInputs","getDefaultAttributeToPropertyInputs","camelToDashCase","input","replace","char","toLowerCase","NgElementImpl","_ngElementStrategy","strategy_1","preExistingValues","filter","_b","attributeChangedCallback","attrName","oldValue","namespace","connectedCallback","subscribe","customEvent","createCustomEvent","doc","detail","CustomEvent","event_1","createEvent","initCustomEvent","bubbles","cancelable","ownerDocument","dispatchEvent","disconnectedCallback","unsubscribe","keys"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.1.12\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/elements', ['exports', '@angular/core', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.elements = {}), global.ng.core, global.rxjs, global.rxjs.operators));\n}(this, (function (exports, core, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\r\n\r\n    function __classPrivateFieldGet(receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    }\r\n\r\n    function __classPrivateFieldSet(receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function () {\n        var elProto = Element.prototype;\n        return elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n            elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n    };\n    var matches = (ɵ0)();\n    /**\n     * Provide methods for scheduling the execution of a callback.\n     */\n    var scheduler = {\n        /**\n         * Schedule a callback to be called after some delay.\n         *\n         * Returns a function that when executed will cancel the scheduled function.\n         */\n        schedule: function (taskFn, delay) {\n            var id = setTimeout(taskFn, delay);\n            return function () { return clearTimeout(id); };\n        },\n        /**\n         * Schedule a callback to be called before the next render.\n         * (If `window.requestAnimationFrame()` is not available, use `scheduler.schedule()` instead.)\n         *\n         * Returns a function that when executed will cancel the scheduled function.\n         */\n        scheduleBeforeRender: function (taskFn) {\n            // TODO(gkalpak): Implement a better way of accessing `requestAnimationFrame()`\n            //                (e.g. accounting for vendor prefix, SSR-compatibility, etc).\n            if (typeof window === 'undefined') {\n                // For SSR just schedule immediately.\n                return scheduler.schedule(taskFn, 0);\n            }\n            if (typeof window.requestAnimationFrame === 'undefined') {\n                var frameMs = 16;\n                return scheduler.schedule(taskFn, frameMs);\n            }\n            var id = window.requestAnimationFrame(taskFn);\n            return function () { return window.cancelAnimationFrame(id); };\n        },\n    };\n    /**\n     * Convert a camelCased string to kebab-cased.\n     */\n    function camelToDashCase(input) {\n        return input.replace(/[A-Z]/g, function (char) { return \"-\" + char.toLowerCase(); });\n    }\n    /**\n     * Create a `CustomEvent` (even on browsers where `CustomEvent` is not a constructor).\n     */\n    function createCustomEvent(doc, name, detail) {\n        var bubbles = false;\n        var cancelable = false;\n        // On IE9-11, `CustomEvent` is not a constructor.\n        if (typeof CustomEvent !== 'function') {\n            var event_1 = doc.createEvent('CustomEvent');\n            event_1.initCustomEvent(name, bubbles, cancelable, detail);\n            return event_1;\n        }\n        return new CustomEvent(name, { bubbles: bubbles, cancelable: cancelable, detail: detail });\n    }\n    /**\n     * Check whether the input is an `Element`.\n     */\n    function isElement(node) {\n        return !!node && node.nodeType === Node.ELEMENT_NODE;\n    }\n    /**\n     * Check whether the input is a function.\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n    /**\n     * Convert a kebab-cased string to camelCased.\n     */\n    function kebabToCamelCase(input) {\n        return input.replace(/-([a-z\\d])/g, function (_, char) { return char.toUpperCase(); });\n    }\n    /**\n     * Check whether an `Element` matches a CSS selector.\n     */\n    function matchesSelector(element, selector) {\n        return matches.call(element, selector);\n    }\n    /**\n     * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n     */\n    function strictEquals(value1, value2) {\n        return value1 === value2 || (value1 !== value1 && value2 !== value2);\n    }\n    /** Gets a map of default set of attributes to observe and the properties they affect. */\n    function getDefaultAttributeToPropertyInputs(inputs) {\n        var attributeToPropertyInputs = {};\n        inputs.forEach(function (_a) {\n            var propName = _a.propName, templateName = _a.templateName;\n            attributeToPropertyInputs[camelToDashCase(templateName)] = propName;\n        });\n        return attributeToPropertyInputs;\n    }\n    /**\n     * Gets a component's set of inputs. Uses the injector to get the component factory where the inputs\n     * are defined.\n     */\n    function getComponentInputs(component, injector) {\n        var componentFactoryResolver = injector.get(core.ComponentFactoryResolver);\n        var componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n        return componentFactory.inputs;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function extractProjectableNodes(host, ngContentSelectors) {\n        var nodes = host.childNodes;\n        var projectableNodes = ngContentSelectors.map(function () { return []; });\n        var wildcardIndex = -1;\n        ngContentSelectors.some(function (selector, i) {\n            if (selector === '*') {\n                wildcardIndex = i;\n                return true;\n            }\n            return false;\n        });\n        for (var i = 0, ii = nodes.length; i < ii; ++i) {\n            var node = nodes[i];\n            var ngContentIndex = findMatchingIndex(node, ngContentSelectors, wildcardIndex);\n            if (ngContentIndex !== -1) {\n                projectableNodes[ngContentIndex].push(node);\n            }\n        }\n        return projectableNodes;\n    }\n    function findMatchingIndex(node, selectors, defaultIndex) {\n        var matchingIndex = defaultIndex;\n        if (isElement(node)) {\n            selectors.some(function (selector, i) {\n                if ((selector !== '*') && matchesSelector(node, selector)) {\n                    matchingIndex = i;\n                    return true;\n                }\n                return false;\n            });\n        }\n        return matchingIndex;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Time in milliseconds to wait before destroying the component ref when disconnected. */\n    var DESTROY_DELAY = 10;\n    /**\n     * Factory that creates new ComponentNgElementStrategy instance. Gets the component factory with the\n     * constructor's injector's factory resolver and passes that factory to each strategy.\n     *\n     * @publicApi\n     */\n    var ComponentNgElementStrategyFactory = /** @class */ (function () {\n        function ComponentNgElementStrategyFactory(component, injector) {\n            this.componentFactory =\n                injector.get(core.ComponentFactoryResolver).resolveComponentFactory(component);\n        }\n        ComponentNgElementStrategyFactory.prototype.create = function (injector) {\n            return new ComponentNgElementStrategy(this.componentFactory, injector);\n        };\n        return ComponentNgElementStrategyFactory;\n    }());\n    /**\n     * Creates and destroys a component ref using a component factory and handles change detection\n     * in response to input changes.\n     *\n     * @publicApi\n     */\n    var ComponentNgElementStrategy = /** @class */ (function () {\n        function ComponentNgElementStrategy(componentFactory, injector) {\n            this.componentFactory = componentFactory;\n            this.injector = injector;\n            /** Reference to the component that was created on connect. */\n            this.componentRef = null;\n            /** Changes that have been made to the component ref since the last time onChanges was called. */\n            this.inputChanges = null;\n            /** Whether the created component implements the onChanges function. */\n            this.implementsOnChanges = false;\n            /** Whether a change detection has been scheduled to run on the component. */\n            this.scheduledChangeDetectionFn = null;\n            /** Callback function that when called will cancel a scheduled destruction on the component. */\n            this.scheduledDestroyFn = null;\n            /** Initial input values that were set before the component was created. */\n            this.initialInputValues = new Map();\n            /**\n             * Set of component inputs that have not yet changed, i.e. for which `ngOnChanges()` has not\n             * fired. (This is used to determine the value of `fistChange` in `SimpleChange` instances.)\n             */\n            this.unchangedInputs = new Set();\n        }\n        /**\n         * Initializes a new component if one has not yet been created and cancels any scheduled\n         * destruction.\n         */\n        ComponentNgElementStrategy.prototype.connect = function (element) {\n            // If the element is marked to be destroyed, cancel the task since the component was reconnected\n            if (this.scheduledDestroyFn !== null) {\n                this.scheduledDestroyFn();\n                this.scheduledDestroyFn = null;\n                return;\n            }\n            if (this.componentRef === null) {\n                this.initializeComponent(element);\n            }\n        };\n        /**\n         * Schedules the component to be destroyed after some small delay in case the element is just\n         * being moved across the DOM.\n         */\n        ComponentNgElementStrategy.prototype.disconnect = function () {\n            var _this = this;\n            // Return if there is no componentRef or the component is already scheduled for destruction\n            if (this.componentRef === null || this.scheduledDestroyFn !== null) {\n                return;\n            }\n            // Schedule the component to be destroyed after a small timeout in case it is being\n            // moved elsewhere in the DOM\n            this.scheduledDestroyFn = scheduler.schedule(function () {\n                if (_this.componentRef !== null) {\n                    _this.componentRef.destroy();\n                    _this.componentRef = null;\n                }\n            }, DESTROY_DELAY);\n        };\n        /**\n         * Returns the component property value. If the component has not yet been created, the value is\n         * retrieved from the cached initialization values.\n         */\n        ComponentNgElementStrategy.prototype.getInputValue = function (property) {\n            if (this.componentRef === null) {\n                return this.initialInputValues.get(property);\n            }\n            return this.componentRef.instance[property];\n        };\n        /**\n         * Sets the input value for the property. If the component has not yet been created, the value is\n         * cached and set when the component is created.\n         */\n        ComponentNgElementStrategy.prototype.setInputValue = function (property, value) {\n            if (this.componentRef === null) {\n                this.initialInputValues.set(property, value);\n                return;\n            }\n            // Ignore the value if it is strictly equal to the current value, except if it is `undefined`\n            // and this is the first change to the value (because an explicit `undefined` _is_ strictly\n            // equal to not having a value set at all, but we still need to record this as a change).\n            if (strictEquals(value, this.getInputValue(property)) &&\n                !((value === undefined) && this.unchangedInputs.has(property))) {\n                return;\n            }\n            this.recordInputChange(property, value);\n            this.componentRef.instance[property] = value;\n            this.scheduleDetectChanges();\n        };\n        /**\n         * Creates a new component through the component factory with the provided element host and\n         * sets up its initial inputs, listens for outputs changes, and runs an initial change detection.\n         */\n        ComponentNgElementStrategy.prototype.initializeComponent = function (element) {\n            var childInjector = core.Injector.create({ providers: [], parent: this.injector });\n            var projectableNodes = extractProjectableNodes(element, this.componentFactory.ngContentSelectors);\n            this.componentRef = this.componentFactory.create(childInjector, projectableNodes, element);\n            this.implementsOnChanges = isFunction(this.componentRef.instance.ngOnChanges);\n            this.initializeInputs();\n            this.initializeOutputs(this.componentRef);\n            this.detectChanges();\n            var applicationRef = this.injector.get(core.ApplicationRef);\n            applicationRef.attachView(this.componentRef.hostView);\n        };\n        /** Set any stored initial inputs on the component's properties. */\n        ComponentNgElementStrategy.prototype.initializeInputs = function () {\n            var _this = this;\n            this.componentFactory.inputs.forEach(function (_a) {\n                var propName = _a.propName;\n                if (_this.implementsOnChanges) {\n                    // If the component implements `ngOnChanges()`, keep track of which inputs have never\n                    // changed so far.\n                    _this.unchangedInputs.add(propName);\n                }\n                if (_this.initialInputValues.has(propName)) {\n                    // Call `setInputValue()` now that the component has been instantiated to update its\n                    // properties and fire `ngOnChanges()`.\n                    _this.setInputValue(propName, _this.initialInputValues.get(propName));\n                }\n            });\n            this.initialInputValues.clear();\n        };\n        /** Sets up listeners for the component's outputs so that the events stream emits the events. */\n        ComponentNgElementStrategy.prototype.initializeOutputs = function (componentRef) {\n            var eventEmitters = this.componentFactory.outputs.map(function (_a) {\n                var propName = _a.propName, templateName = _a.templateName;\n                var emitter = componentRef.instance[propName];\n                return emitter.pipe(operators.map(function (value) { return ({ name: templateName, value: value }); }));\n            });\n            this.events = rxjs.merge.apply(void 0, __spread(eventEmitters));\n        };\n        /** Calls ngOnChanges with all the inputs that have changed since the last call. */\n        ComponentNgElementStrategy.prototype.callNgOnChanges = function (componentRef) {\n            if (!this.implementsOnChanges || this.inputChanges === null) {\n                return;\n            }\n            // Cache the changes and set inputChanges to null to capture any changes that might occur\n            // during ngOnChanges.\n            var inputChanges = this.inputChanges;\n            this.inputChanges = null;\n            componentRef.instance.ngOnChanges(inputChanges);\n        };\n        /**\n         * Schedules change detection to run on the component.\n         * Ignores subsequent calls if already scheduled.\n         */\n        ComponentNgElementStrategy.prototype.scheduleDetectChanges = function () {\n            var _this = this;\n            if (this.scheduledChangeDetectionFn) {\n                return;\n            }\n            this.scheduledChangeDetectionFn = scheduler.scheduleBeforeRender(function () {\n                _this.scheduledChangeDetectionFn = null;\n                _this.detectChanges();\n            });\n        };\n        /**\n         * Records input changes so that the component receives SimpleChanges in its onChanges function.\n         */\n        ComponentNgElementStrategy.prototype.recordInputChange = function (property, currentValue) {\n            // Do not record the change if the component does not implement `OnChanges`.\n            // (We can only determine that after the component has been instantiated.)\n            if (this.componentRef !== null && !this.implementsOnChanges) {\n                return;\n            }\n            if (this.inputChanges === null) {\n                this.inputChanges = {};\n            }\n            // If there already is a change, modify the current value to match but leave the values for\n            // previousValue and isFirstChange.\n            var pendingChange = this.inputChanges[property];\n            if (pendingChange) {\n                pendingChange.currentValue = currentValue;\n                return;\n            }\n            var isFirstChange = this.unchangedInputs.has(property);\n            this.unchangedInputs.delete(property);\n            var previousValue = isFirstChange ? undefined : this.getInputValue(property);\n            this.inputChanges[property] = new core.SimpleChange(previousValue, currentValue, isFirstChange);\n        };\n        /** Runs change detection on the component. */\n        ComponentNgElementStrategy.prototype.detectChanges = function () {\n            if (this.componentRef === null) {\n                return;\n            }\n            this.callNgOnChanges(this.componentRef);\n            this.componentRef.changeDetectorRef.detectChanges();\n        };\n        return ComponentNgElementStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Implements the functionality needed for a custom element.\n     *\n     * @publicApi\n     */\n    var NgElement = /** @class */ (function (_super) {\n        __extends(NgElement, _super);\n        function NgElement() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * A subscription to change, connect, and disconnect events in the custom element.\n             */\n            _this.ngElementEventsSubscription = null;\n            return _this;\n        }\n        return NgElement;\n    }(HTMLElement));\n    /**\n     *  @description Creates a custom element class based on an Angular component.\n     *\n     * Builds a class that encapsulates the functionality of the provided component and\n     * uses the configuration information to provide more context to the class.\n     * Takes the component factory's inputs and outputs to convert them to the proper\n     * custom element API and add hooks to input changes.\n     *\n     * The configuration's injector is the initial injector set on the class,\n     * and used by default for each created instance.This behavior can be overridden with the\n     * static property to affect all newly created instances, or as a constructor argument for\n     * one-off creations.\n     *\n     * @param component The component to transform.\n     * @param config A configuration that provides initialization information to the created class.\n     * @returns The custom-element construction class, which can be registered with\n     * a browser's `CustomElementRegistry`.\n     *\n     * @publicApi\n     */\n    function createCustomElement(component, config) {\n        var inputs = getComponentInputs(component, config.injector);\n        var strategyFactory = config.strategyFactory || new ComponentNgElementStrategyFactory(component, config.injector);\n        var attributeToPropertyInputs = getDefaultAttributeToPropertyInputs(inputs);\n        var NgElementImpl = /** @class */ (function (_super) {\n            __extends(NgElementImpl, _super);\n            function NgElementImpl(injector) {\n                var _this = _super.call(this) || this;\n                _this.injector = injector;\n                return _this;\n            }\n            Object.defineProperty(NgElementImpl.prototype, \"ngElementStrategy\", {\n                get: function () {\n                    var _this = this;\n                    // NOTE:\n                    // Some polyfills (e.g. `document-register-element`) do not call the constructor, therefore\n                    // it is not safe to set `ngElementStrategy` in the constructor and assume it will be\n                    // available inside the methods.\n                    //\n                    // TODO(andrewseguin): Add e2e tests that cover cases where the constructor isn't called. For\n                    // now this is tested using a Google internal test suite.\n                    if (!this._ngElementStrategy) {\n                        var strategy_1 = this._ngElementStrategy =\n                            strategyFactory.create(this.injector || config.injector);\n                        // Collect pre-existing values on the element to re-apply through the strategy.\n                        var preExistingValues = inputs.filter(function (_a) {\n                            var propName = _a.propName;\n                            return _this.hasOwnProperty(propName);\n                        }).map(function (_a) {\n                            var propName = _a.propName;\n                            return [propName, _this[propName]];\n                        });\n                        // In some browsers (e.g. IE10), `Object.setPrototypeOf()` (which is required by some Custom\n                        // Elements polyfills) is not defined and is thus polyfilled in a way that does not preserve\n                        // the prototype chain. In such cases, `this` will not be an instance of `NgElementImpl` and\n                        // thus not have the component input getters/setters defined on `NgElementImpl.prototype`.\n                        if (!(this instanceof NgElementImpl)) {\n                            // Add getters and setters to the instance itself for each property input.\n                            defineInputGettersSetters(inputs, this);\n                        }\n                        else {\n                            // Delete the property from the instance, so that it can go through the getters/setters\n                            // set on `NgElementImpl.prototype`.\n                            preExistingValues.forEach(function (_a) {\n                                var _b = __read(_a, 1), propName = _b[0];\n                                return delete _this[propName];\n                            });\n                        }\n                        // Re-apply pre-existing values through the strategy.\n                        preExistingValues.forEach(function (_a) {\n                            var _b = __read(_a, 2), propName = _b[0], value = _b[1];\n                            return strategy_1.setInputValue(propName, value);\n                        });\n                    }\n                    return this._ngElementStrategy;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            NgElementImpl.prototype.attributeChangedCallback = function (attrName, oldValue, newValue, namespace) {\n                var propName = attributeToPropertyInputs[attrName];\n                this.ngElementStrategy.setInputValue(propName, newValue);\n            };\n            NgElementImpl.prototype.connectedCallback = function () {\n                var _this = this;\n                this.ngElementStrategy.connect(this);\n                // Listen for events from the strategy and dispatch them as custom events\n                this.ngElementEventsSubscription = this.ngElementStrategy.events.subscribe(function (e) {\n                    var customEvent = createCustomEvent(_this.ownerDocument, e.name, e.value);\n                    _this.dispatchEvent(customEvent);\n                });\n            };\n            NgElementImpl.prototype.disconnectedCallback = function () {\n                // Not using `this.ngElementStrategy` to avoid unnecessarily creating the `NgElementStrategy`.\n                if (this._ngElementStrategy) {\n                    this._ngElementStrategy.disconnect();\n                }\n                if (this.ngElementEventsSubscription) {\n                    this.ngElementEventsSubscription.unsubscribe();\n                    this.ngElementEventsSubscription = null;\n                }\n            };\n            // Work around a bug in closure typed optimizations(b/79557487) where it is not honoring static\n            // field externs. So using quoted access to explicitly prevent renaming.\n            NgElementImpl['observedAttributes'] = Object.keys(attributeToPropertyInputs);\n            return NgElementImpl;\n        }(NgElement));\n        // Add getters and setters to the prototype for each property input.\n        defineInputGettersSetters(inputs, NgElementImpl.prototype);\n        return NgElementImpl;\n    }\n    // Helpers\n    function defineInputGettersSetters(inputs, target) {\n        // Add getters and setters for each property input.\n        inputs.forEach(function (_a) {\n            var propName = _a.propName;\n            Object.defineProperty(target, propName, {\n                get: function () {\n                    return this.ngElementStrategy.getInputValue(propName);\n                },\n                set: function (newValue) {\n                    this.ngElementStrategy.setInputValue(propName, newValue);\n                },\n                configurable: true,\n                enumerable: true,\n            });\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var VERSION = new core.Version('9.1.12');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.NgElement = NgElement;\n    exports.VERSION = VERSION;\n    exports.createCustomElement = createCustomElement;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=elements.umd.js.map\n"]}