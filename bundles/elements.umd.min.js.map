{"version":3,"sources":["packages/elements/elements.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","elements","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","_matches","scheduler","schedule","taskFn","delay","id","setTimeout","clearTimeout","scheduleBeforeRender","window","requestAnimationFrame","cancelAnimationFrame","findMatchingIndex","node","selectors","defaultIndex","matchingIndex","isElement","nodeType","Node","ELEMENT_NODE","some","selector","matchesSelector","el","elProto","Element","matches","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ComponentNgElementStrategyFactory","component","injector","componentFactory","get","ComponentFactoryResolver","resolveComponentFactory","ComponentNgElementStrategy","eventEmitters","ReplaySubject","events","pipe","switchMap","emitters","merge","apply","componentRef","viewChangeDetectorRef","inputChanges","hasInputChanges","implementsOnChanges","scheduledChangeDetectionFn","scheduledDestroyFn","initialInputValues","Map","unchangedInputs","Set","inputs","map","_a","propName","ngZone","NgZone","elementZone","Zone","run","current","connect","element","_this","runInZone","initializeComponent","disconnect","destroy","getInputValue","property","instance","setInputValue","strictEquals","value1","value2","undefined","has","recordInputChange","delete","scheduleDetectChanges","set","childInjector","Injector","providers","parent","projectableNodes","extractProjectableNodes","host","ngContentSelectors","nodes","childNodes","wildcardIndex","ii","ngContentIndex","ChangeDetectorRef","isFunction","ngOnChanges","initializeInputs","initializeOutputs","detectChanges","ApplicationRef","attachView","hostView","forEach","clear","outputs","templateName","name","callNgOnChanges","markViewForCheck","markForCheck","currentValue","pendingChange","isFirstChange","previousValue","SimpleChange","changeDetectorRef","fn","NgElement","_super","ngElementEventsSubscription","HTMLElement","VERSION","Version","createCustomElement","config","getComponentInputs","strategyFactory","attributeToPropertyInputs","getDefaultAttributeToPropertyInputs","camelToDashCase","input","replace","char","toLowerCase","NgElementImpl","defineProperty","_ngElementStrategy","strategy_1","enumerable","configurable","attributeChangedCallback","attrName","oldValue","newValue","namespace","ngElementStrategy","connectedCallback","subscribedToEvents","subscribeToEvents","disconnectedCallback","unsubscribe","subscribe","customEvent","createCustomEvent","doc","detail","CustomEvent","event","createEvent","initCustomEvent","bubbles","cancelable","ownerDocument","dispatchEvent","keys"],"mappings":"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","sourcesContent":["/**\n * @license Angular v11.1.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/elements', ['exports', '@angular/core', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.elements = {}), global.ng.core, global.rxjs, global.rxjs.operators));\n}(this, (function (exports, core, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n    /* global Reflect, Promise */\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    function __extends(d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n    var __assign = function () {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function __rest(s, e) {\n        var t = {};\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                    t[p[i]] = s[p[i]];\n            }\n        return t;\n    }\n    function __decorate(decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n            r = Reflect.decorate(decorators, target, key, desc);\n        else\n            for (var i = decorators.length - 1; i >= 0; i--)\n                if (d = decorators[i])\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    }\n    function __param(paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); };\n    }\n    function __metadata(metadataKey, metadataValue) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n            return Reflect.metadata(metadataKey, metadataValue);\n    }\n    function __awaiter(thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try {\n                step(generator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function rejected(value) { try {\n                step(generator[\"throw\"](value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    }\n    function __generator(thisArg, body) {\n        var _ = { label: 0, sent: function () { if (t[0] & 1)\n                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () { return this; }), g;\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f)\n                throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                        return t;\n                    if (y = 0, t)\n                        op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2])\n                                _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                }\n                catch (e) {\n                    op = [6, e];\n                    y = 0;\n                }\n                finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5)\n                throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n    var __createBinding = Object.create ? (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });\n    }) : (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        o[k2] = m[k];\n    });\n    function __exportStar(m, exports) {\n        for (var p in m)\n            if (p !== \"default\" && !exports.hasOwnProperty(p))\n                __createBinding(exports, m, p);\n    }\n    function __values(o) {\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n        if (m)\n            return m.call(o);\n        if (o && typeof o.length === \"number\")\n            return {\n                next: function () {\n                    if (o && i >= o.length)\n                        o = void 0;\n                    return { value: o && o[i++], done: !o };\n                }\n            };\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    }\n    function __read(o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m)\n            return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n                ar.push(r.value);\n        }\n        catch (error) {\n            e = { error: error };\n        }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"]))\n                    m.call(i);\n            }\n            finally {\n                if (e)\n                    throw e.error;\n            }\n        }\n        return ar;\n    }\n    function __spread() {\n        for (var ar = [], i = 0; i < arguments.length; i++)\n            ar = ar.concat(__read(arguments[i]));\n        return ar;\n    }\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n            s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n    ;\n    function __await(v) {\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\n    }\n    function __asyncGenerator(thisArg, _arguments, generator) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n        function verb(n) { if (g[n])\n            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n        function resume(n, v) { try {\n            step(g[n](v));\n        }\n        catch (e) {\n            settle(q[0][3], e);\n        } }\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n        function fulfill(value) { resume(\"next\", value); }\n        function reject(value) { resume(\"throw\", value); }\n        function settle(f, v) { if (f(v), q.shift(), q.length)\n            resume(q[0][0], q[0][1]); }\n    }\n    function __asyncDelegator(o) {\n        var i, p;\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\n    }\n    function __asyncValues(o) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var m = o[Symbol.asyncIterator], i;\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }\n    }\n    function __makeTemplateObject(cooked, raw) {\n        if (Object.defineProperty) {\n            Object.defineProperty(cooked, \"raw\", { value: raw });\n        }\n        else {\n            cooked.raw = raw;\n        }\n        return cooked;\n    }\n    ;\n    var __setModuleDefault = Object.create ? (function (o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n    }) : function (o, v) {\n        o[\"default\"] = v;\n    };\n    function __importStar(mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    __createBinding(result, mod, k);\n        __setModuleDefault(result, mod);\n        return result;\n    }\n    function __importDefault(mod) {\n        return (mod && mod.__esModule) ? mod : { default: mod };\n    }\n    function __classPrivateFieldGet(receiver, privateMap) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to get private field on non-instance\");\n        }\n        return privateMap.get(receiver);\n    }\n    function __classPrivateFieldSet(receiver, privateMap, value) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to set private field on non-instance\");\n        }\n        privateMap.set(receiver, value);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide methods for scheduling the execution of a callback.\n     */\n    var scheduler = {\n        /**\n         * Schedule a callback to be called after some delay.\n         *\n         * Returns a function that when executed will cancel the scheduled function.\n         */\n        schedule: function (taskFn, delay) {\n            var id = setTimeout(taskFn, delay);\n            return function () { return clearTimeout(id); };\n        },\n        /**\n         * Schedule a callback to be called before the next render.\n         * (If `window.requestAnimationFrame()` is not available, use `scheduler.schedule()` instead.)\n         *\n         * Returns a function that when executed will cancel the scheduled function.\n         */\n        scheduleBeforeRender: function (taskFn) {\n            // TODO(gkalpak): Implement a better way of accessing `requestAnimationFrame()`\n            //                (e.g. accounting for vendor prefix, SSR-compatibility, etc).\n            if (typeof window === 'undefined') {\n                // For SSR just schedule immediately.\n                return scheduler.schedule(taskFn, 0);\n            }\n            if (typeof window.requestAnimationFrame === 'undefined') {\n                var frameMs = 16;\n                return scheduler.schedule(taskFn, frameMs);\n            }\n            var id = window.requestAnimationFrame(taskFn);\n            return function () { return window.cancelAnimationFrame(id); };\n        },\n    };\n    /**\n     * Convert a camelCased string to kebab-cased.\n     */\n    function camelToDashCase(input) {\n        return input.replace(/[A-Z]/g, function (char) { return \"-\" + char.toLowerCase(); });\n    }\n    /**\n     * Create a `CustomEvent` (even on browsers where `CustomEvent` is not a constructor).\n     */\n    function createCustomEvent(doc, name, detail) {\n        var bubbles = false;\n        var cancelable = false;\n        // On IE11, `CustomEvent` is not a constructor.\n        if (typeof CustomEvent !== 'function') {\n            var event = doc.createEvent('CustomEvent');\n            event.initCustomEvent(name, bubbles, cancelable, detail);\n            return event;\n        }\n        return new CustomEvent(name, { bubbles: bubbles, cancelable: cancelable, detail: detail });\n    }\n    /**\n     * Check whether the input is an `Element`.\n     */\n    function isElement(node) {\n        return !!node && node.nodeType === Node.ELEMENT_NODE;\n    }\n    /**\n     * Check whether the input is a function.\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n    /**\n     * Convert a kebab-cased string to camelCased.\n     */\n    function kebabToCamelCase(input) {\n        return input.replace(/-([a-z\\d])/g, function (_, char) { return char.toUpperCase(); });\n    }\n    var _matches;\n    /**\n     * Check whether an `Element` matches a CSS selector.\n     * NOTE: this is duplicated from @angular/upgrade, and can\n     * be consolidated in the future\n     */\n    function matchesSelector(el, selector) {\n        if (!_matches) {\n            var elProto = Element.prototype;\n            _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n                elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n        }\n        return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n    }\n    /**\n     * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n     */\n    function strictEquals(value1, value2) {\n        return value1 === value2 || (value1 !== value1 && value2 !== value2);\n    }\n    /** Gets a map of default set of attributes to observe and the properties they affect. */\n    function getDefaultAttributeToPropertyInputs(inputs) {\n        var attributeToPropertyInputs = {};\n        inputs.forEach(function (_a) {\n            var propName = _a.propName, templateName = _a.templateName;\n            attributeToPropertyInputs[camelToDashCase(templateName)] = propName;\n        });\n        return attributeToPropertyInputs;\n    }\n    /**\n     * Gets a component's set of inputs. Uses the injector to get the component factory where the inputs\n     * are defined.\n     */\n    function getComponentInputs(component, injector) {\n        var componentFactoryResolver = injector.get(core.ComponentFactoryResolver);\n        var componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n        return componentFactory.inputs;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function extractProjectableNodes(host, ngContentSelectors) {\n        var nodes = host.childNodes;\n        var projectableNodes = ngContentSelectors.map(function () { return []; });\n        var wildcardIndex = -1;\n        ngContentSelectors.some(function (selector, i) {\n            if (selector === '*') {\n                wildcardIndex = i;\n                return true;\n            }\n            return false;\n        });\n        for (var i = 0, ii = nodes.length; i < ii; ++i) {\n            var node = nodes[i];\n            var ngContentIndex = findMatchingIndex(node, ngContentSelectors, wildcardIndex);\n            if (ngContentIndex !== -1) {\n                projectableNodes[ngContentIndex].push(node);\n            }\n        }\n        return projectableNodes;\n    }\n    function findMatchingIndex(node, selectors, defaultIndex) {\n        var matchingIndex = defaultIndex;\n        if (isElement(node)) {\n            selectors.some(function (selector, i) {\n                if ((selector !== '*') && matchesSelector(node, selector)) {\n                    matchingIndex = i;\n                    return true;\n                }\n                return false;\n            });\n        }\n        return matchingIndex;\n    }\n\n    /** Time in milliseconds to wait before destroying the component ref when disconnected. */\n    var DESTROY_DELAY = 10;\n    /**\n     * Factory that creates new ComponentNgElementStrategy instance. Gets the component factory with the\n     * constructor's injector's factory resolver and passes that factory to each strategy.\n     *\n     * @publicApi\n     */\n    var ComponentNgElementStrategyFactory = /** @class */ (function () {\n        function ComponentNgElementStrategyFactory(component, injector) {\n            this.componentFactory =\n                injector.get(core.ComponentFactoryResolver).resolveComponentFactory(component);\n        }\n        ComponentNgElementStrategyFactory.prototype.create = function (injector) {\n            return new ComponentNgElementStrategy(this.componentFactory, injector);\n        };\n        return ComponentNgElementStrategyFactory;\n    }());\n    /**\n     * Creates and destroys a component ref using a component factory and handles change detection\n     * in response to input changes.\n     *\n     * @publicApi\n     */\n    var ComponentNgElementStrategy = /** @class */ (function () {\n        function ComponentNgElementStrategy(componentFactory, injector) {\n            this.componentFactory = componentFactory;\n            this.injector = injector;\n            // Subject of `NgElementStrategyEvent` observables corresponding to the component's outputs.\n            this.eventEmitters = new rxjs.ReplaySubject(1);\n            /** Merged stream of the component's output events. */\n            this.events = this.eventEmitters.pipe(operators.switchMap(function (emitters) { return rxjs.merge.apply(void 0, __spread(emitters)); }));\n            /** Reference to the component that was created on connect. */\n            this.componentRef = null;\n            /** Reference to the component view's `ChangeDetectorRef`. */\n            this.viewChangeDetectorRef = null;\n            /**\n             * Changes that have been made to component inputs since the last change detection run.\n             * (NOTE: These are only recorded if the component implements the `OnChanges` interface.)\n             */\n            this.inputChanges = null;\n            /** Whether changes have been made to component inputs since the last change detection run. */\n            this.hasInputChanges = false;\n            /** Whether the created component implements the `OnChanges` interface. */\n            this.implementsOnChanges = false;\n            /** Whether a change detection has been scheduled to run on the component. */\n            this.scheduledChangeDetectionFn = null;\n            /** Callback function that when called will cancel a scheduled destruction on the component. */\n            this.scheduledDestroyFn = null;\n            /** Initial input values that were set before the component was created. */\n            this.initialInputValues = new Map();\n            /**\n             * Set of component inputs that have not yet changed, i.e. for which `recordInputChange()` has not\n             * fired.\n             * (This helps detect the first change of an input, even if it is explicitly set to `undefined`.)\n             */\n            this.unchangedInputs = new Set(this.componentFactory.inputs.map(function (_a) {\n                var propName = _a.propName;\n                return propName;\n            }));\n            /** Service for setting zone context. */\n            this.ngZone = this.injector.get(core.NgZone);\n            /** The zone the element was created in or `null` if Zone.js is not loaded. */\n            this.elementZone = (typeof Zone === 'undefined') ? null : this.ngZone.run(function () { return Zone.current; });\n        }\n        /**\n         * Initializes a new component if one has not yet been created and cancels any scheduled\n         * destruction.\n         */\n        ComponentNgElementStrategy.prototype.connect = function (element) {\n            var _this = this;\n            this.runInZone(function () {\n                // If the element is marked to be destroyed, cancel the task since the component was\n                // reconnected\n                if (_this.scheduledDestroyFn !== null) {\n                    _this.scheduledDestroyFn();\n                    _this.scheduledDestroyFn = null;\n                    return;\n                }\n                if (_this.componentRef === null) {\n                    _this.initializeComponent(element);\n                }\n            });\n        };\n        /**\n         * Schedules the component to be destroyed after some small delay in case the element is just\n         * being moved across the DOM.\n         */\n        ComponentNgElementStrategy.prototype.disconnect = function () {\n            var _this = this;\n            this.runInZone(function () {\n                // Return if there is no componentRef or the component is already scheduled for destruction\n                if (_this.componentRef === null || _this.scheduledDestroyFn !== null) {\n                    return;\n                }\n                // Schedule the component to be destroyed after a small timeout in case it is being\n                // moved elsewhere in the DOM\n                _this.scheduledDestroyFn = scheduler.schedule(function () {\n                    if (_this.componentRef !== null) {\n                        _this.componentRef.destroy();\n                        _this.componentRef = null;\n                        _this.viewChangeDetectorRef = null;\n                    }\n                }, DESTROY_DELAY);\n            });\n        };\n        /**\n         * Returns the component property value. If the component has not yet been created, the value is\n         * retrieved from the cached initialization values.\n         */\n        ComponentNgElementStrategy.prototype.getInputValue = function (property) {\n            var _this = this;\n            return this.runInZone(function () {\n                if (_this.componentRef === null) {\n                    return _this.initialInputValues.get(property);\n                }\n                return _this.componentRef.instance[property];\n            });\n        };\n        /**\n         * Sets the input value for the property. If the component has not yet been created, the value is\n         * cached and set when the component is created.\n         */\n        ComponentNgElementStrategy.prototype.setInputValue = function (property, value) {\n            var _this = this;\n            this.runInZone(function () {\n                if (_this.componentRef === null) {\n                    _this.initialInputValues.set(property, value);\n                    return;\n                }\n                // Ignore the value if it is strictly equal to the current value, except if it is `undefined`\n                // and this is the first change to the value (because an explicit `undefined` _is_ strictly\n                // equal to not having a value set at all, but we still need to record this as a change).\n                if (strictEquals(value, _this.getInputValue(property)) &&\n                    !((value === undefined) && _this.unchangedInputs.has(property))) {\n                    return;\n                }\n                // Record the changed value and update internal state to reflect the fact that this input has\n                // changed.\n                _this.recordInputChange(property, value);\n                _this.unchangedInputs.delete(property);\n                _this.hasInputChanges = true;\n                // Update the component instance and schedule change detection.\n                _this.componentRef.instance[property] = value;\n                _this.scheduleDetectChanges();\n            });\n        };\n        /**\n         * Creates a new component through the component factory with the provided element host and\n         * sets up its initial inputs, listens for outputs changes, and runs an initial change detection.\n         */\n        ComponentNgElementStrategy.prototype.initializeComponent = function (element) {\n            var childInjector = core.Injector.create({ providers: [], parent: this.injector });\n            var projectableNodes = extractProjectableNodes(element, this.componentFactory.ngContentSelectors);\n            this.componentRef = this.componentFactory.create(childInjector, projectableNodes, element);\n            this.viewChangeDetectorRef = this.componentRef.injector.get(core.ChangeDetectorRef);\n            this.implementsOnChanges = isFunction(this.componentRef.instance.ngOnChanges);\n            this.initializeInputs();\n            this.initializeOutputs(this.componentRef);\n            this.detectChanges();\n            var applicationRef = this.injector.get(core.ApplicationRef);\n            applicationRef.attachView(this.componentRef.hostView);\n        };\n        /** Set any stored initial inputs on the component's properties. */\n        ComponentNgElementStrategy.prototype.initializeInputs = function () {\n            var _this = this;\n            this.componentFactory.inputs.forEach(function (_a) {\n                var propName = _a.propName;\n                if (_this.initialInputValues.has(propName)) {\n                    // Call `setInputValue()` now that the component has been instantiated to update its\n                    // properties and fire `ngOnChanges()`.\n                    _this.setInputValue(propName, _this.initialInputValues.get(propName));\n                }\n            });\n            this.initialInputValues.clear();\n        };\n        /** Sets up listeners for the component's outputs so that the events stream emits the events. */\n        ComponentNgElementStrategy.prototype.initializeOutputs = function (componentRef) {\n            var eventEmitters = this.componentFactory.outputs.map(function (_a) {\n                var propName = _a.propName, templateName = _a.templateName;\n                var emitter = componentRef.instance[propName];\n                return emitter.pipe(operators.map(function (value) { return ({ name: templateName, value: value }); }));\n            });\n            this.eventEmitters.next(eventEmitters);\n        };\n        /** Calls ngOnChanges with all the inputs that have changed since the last call. */\n        ComponentNgElementStrategy.prototype.callNgOnChanges = function (componentRef) {\n            if (!this.implementsOnChanges || this.inputChanges === null) {\n                return;\n            }\n            // Cache the changes and set inputChanges to null to capture any changes that might occur\n            // during ngOnChanges.\n            var inputChanges = this.inputChanges;\n            this.inputChanges = null;\n            componentRef.instance.ngOnChanges(inputChanges);\n        };\n        /**\n         * Marks the component view for check, if necessary.\n         * (NOTE: This is required when the `ChangeDetectionStrategy` is set to `OnPush`.)\n         */\n        ComponentNgElementStrategy.prototype.markViewForCheck = function (viewChangeDetectorRef) {\n            if (this.hasInputChanges) {\n                this.hasInputChanges = false;\n                viewChangeDetectorRef.markForCheck();\n            }\n        };\n        /**\n         * Schedules change detection to run on the component.\n         * Ignores subsequent calls if already scheduled.\n         */\n        ComponentNgElementStrategy.prototype.scheduleDetectChanges = function () {\n            var _this = this;\n            if (this.scheduledChangeDetectionFn) {\n                return;\n            }\n            this.scheduledChangeDetectionFn = scheduler.scheduleBeforeRender(function () {\n                _this.scheduledChangeDetectionFn = null;\n                _this.detectChanges();\n            });\n        };\n        /**\n         * Records input changes so that the component receives SimpleChanges in its onChanges function.\n         */\n        ComponentNgElementStrategy.prototype.recordInputChange = function (property, currentValue) {\n            // Do not record the change if the component does not implement `OnChanges`.\n            if (!this.implementsOnChanges) {\n                return;\n            }\n            if (this.inputChanges === null) {\n                this.inputChanges = {};\n            }\n            // If there already is a change, modify the current value to match but leave the values for\n            // `previousValue` and `isFirstChange`.\n            var pendingChange = this.inputChanges[property];\n            if (pendingChange) {\n                pendingChange.currentValue = currentValue;\n                return;\n            }\n            var isFirstChange = this.unchangedInputs.has(property);\n            var previousValue = isFirstChange ? undefined : this.getInputValue(property);\n            this.inputChanges[property] = new core.SimpleChange(previousValue, currentValue, isFirstChange);\n        };\n        /** Runs change detection on the component. */\n        ComponentNgElementStrategy.prototype.detectChanges = function () {\n            if (this.componentRef === null) {\n                return;\n            }\n            this.callNgOnChanges(this.componentRef);\n            this.markViewForCheck(this.viewChangeDetectorRef);\n            this.componentRef.changeDetectorRef.detectChanges();\n        };\n        /** Runs in the angular zone, if present. */\n        ComponentNgElementStrategy.prototype.runInZone = function (fn) {\n            return (this.elementZone && Zone.current !== this.elementZone) ? this.ngZone.run(fn) : fn();\n        };\n        return ComponentNgElementStrategy;\n    }());\n\n    /**\n     * Implements the functionality needed for a custom element.\n     *\n     * @publicApi\n     */\n    var NgElement = /** @class */ (function (_super) {\n        __extends(NgElement, _super);\n        function NgElement() {\n            var _this = _super.apply(this, __spread(arguments)) || this;\n            /**\n             * A subscription to change, connect, and disconnect events in the custom element.\n             */\n            _this.ngElementEventsSubscription = null;\n            return _this;\n        }\n        return NgElement;\n    }(HTMLElement));\n    /**\n     *  @description Creates a custom element class based on an Angular component.\n     *\n     * Builds a class that encapsulates the functionality of the provided component and\n     * uses the configuration information to provide more context to the class.\n     * Takes the component factory's inputs and outputs to convert them to the proper\n     * custom element API and add hooks to input changes.\n     *\n     * The configuration's injector is the initial injector set on the class,\n     * and used by default for each created instance.This behavior can be overridden with the\n     * static property to affect all newly created instances, or as a constructor argument for\n     * one-off creations.\n     *\n     * @see [Angular Elements Overview](guide/elements \"Turning Angular components into custom elements\")\n     *\n     * @param component The component to transform.\n     * @param config A configuration that provides initialization information to the created class.\n     * @returns The custom-element construction class, which can be registered with\n     * a browser's `CustomElementRegistry`.\n     *\n     * @publicApi\n     */\n    function createCustomElement(component, config) {\n        var inputs = getComponentInputs(component, config.injector);\n        var strategyFactory = config.strategyFactory || new ComponentNgElementStrategyFactory(component, config.injector);\n        var attributeToPropertyInputs = getDefaultAttributeToPropertyInputs(inputs);\n        var NgElementImpl = /** @class */ (function (_super) {\n            __extends(NgElementImpl, _super);\n            function NgElementImpl(injector) {\n                var _this = _super.call(this) || this;\n                _this.injector = injector;\n                return _this;\n            }\n            Object.defineProperty(NgElementImpl.prototype, \"ngElementStrategy\", {\n                get: function () {\n                    var _this = this;\n                    // NOTE:\n                    // Some polyfills (e.g. `document-register-element`) do not call the constructor, therefore\n                    // it is not safe to set `ngElementStrategy` in the constructor and assume it will be\n                    // available inside the methods.\n                    //\n                    // TODO(andrewseguin): Add e2e tests that cover cases where the constructor isn't called. For\n                    // now this is tested using a Google internal test suite.\n                    if (!this._ngElementStrategy) {\n                        var strategy_1 = this._ngElementStrategy =\n                            strategyFactory.create(this.injector || config.injector);\n                        // Re-apply pre-existing input values (set as properties on the element) through the\n                        // strategy.\n                        inputs.forEach(function (_a) {\n                            var propName = _a.propName;\n                            if (!_this.hasOwnProperty(propName)) {\n                                // No pre-existing value for `propName`.\n                                return;\n                            }\n                            // Delete the property from the instance and re-apply it through the strategy.\n                            var value = _this[propName];\n                            delete _this[propName];\n                            strategy_1.setInputValue(propName, value);\n                        });\n                    }\n                    return this._ngElementStrategy;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            NgElementImpl.prototype.attributeChangedCallback = function (attrName, oldValue, newValue, namespace) {\n                var propName = attributeToPropertyInputs[attrName];\n                this.ngElementStrategy.setInputValue(propName, newValue);\n            };\n            NgElementImpl.prototype.connectedCallback = function () {\n                // For historical reasons, some strategies may not have initialized the `events` property\n                // until after `connect()` is run. Subscribe to `events` if it is available before running\n                // `connect()` (in order to capture events emitted suring inittialization), otherwise\n                // subscribe afterwards.\n                //\n                // TODO: Consider deprecating/removing the post-connect subscription in a future major version\n                //       (e.g. v11).\n                var subscribedToEvents = false;\n                if (this.ngElementStrategy.events) {\n                    // `events` are already available: Subscribe to it asap.\n                    this.subscribeToEvents();\n                    subscribedToEvents = true;\n                }\n                this.ngElementStrategy.connect(this);\n                if (!subscribedToEvents) {\n                    // `events` were not initialized before running `connect()`: Subscribe to them now.\n                    // The events emitted during the component initialization have been missed, but at least\n                    // future events will be captured.\n                    this.subscribeToEvents();\n                }\n            };\n            NgElementImpl.prototype.disconnectedCallback = function () {\n                // Not using `this.ngElementStrategy` to avoid unnecessarily creating the `NgElementStrategy`.\n                if (this._ngElementStrategy) {\n                    this._ngElementStrategy.disconnect();\n                }\n                if (this.ngElementEventsSubscription) {\n                    this.ngElementEventsSubscription.unsubscribe();\n                    this.ngElementEventsSubscription = null;\n                }\n            };\n            NgElementImpl.prototype.subscribeToEvents = function () {\n                var _this = this;\n                // Listen for events from the strategy and dispatch them as custom events.\n                this.ngElementEventsSubscription = this.ngElementStrategy.events.subscribe(function (e) {\n                    var customEvent = createCustomEvent(_this.ownerDocument, e.name, e.value);\n                    _this.dispatchEvent(customEvent);\n                });\n            };\n            return NgElementImpl;\n        }(NgElement));\n        // Work around a bug in closure typed optimizations(b/79557487) where it is not honoring static\n        // field externs. So using quoted access to explicitly prevent renaming.\n        NgElementImpl['observedAttributes'] = Object.keys(attributeToPropertyInputs);\n        // Add getters and setters to the prototype for each property input.\n        inputs.forEach(function (_a) {\n            var propName = _a.propName;\n            Object.defineProperty(NgElementImpl.prototype, propName, {\n                get: function () {\n                    return this.ngElementStrategy.getInputValue(propName);\n                },\n                set: function (newValue) {\n                    this.ngElementStrategy.setInputValue(propName, newValue);\n                },\n                configurable: true,\n                enumerable: true,\n            });\n        });\n        return NgElementImpl;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var VERSION = new core.Version('11.1.0');\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.NgElement = NgElement;\n    exports.VERSION = VERSION;\n    exports.createCustomElement = createCustomElement;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=elements.umd.js.map\n"]}