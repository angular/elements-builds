{"version":3,"file":"elements.umd.js","sources":["../../../../../../../../../../../../../../ng/node_modules/tslib/tslib.es6.js","../../../../../../../../../../execroot/angular/packages/elements/src/utils.ts","../../../../../../../../../../execroot/angular/packages/elements/src/extract-projectable-nodes.ts","../../../../../../../../../../execroot/angular/packages/elements/src/component-factory-strategy.ts","../../../../../../../../../../execroot/angular/packages/elements/src/create-custom-element.ts","../../../../../../../../../../execroot/angular/packages/elements/src/version.ts","../../../../../../../../../../execroot/angular/packages/elements/public_api.ts","../../../../../../../../../../execroot/angular/packages/elements/index.ts","../../../../../../../../../../execroot/angular/packages/elements/elements.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ComponentFactoryResolver, Injector, Type} from '@angular/core';\n\nconst elProto = Element.prototype as any;\nconst matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n    elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n\n/**\n * Provide methods for scheduling the execution of a callback.\n */\nexport const scheduler = {\n  /**\n   * Schedule a callback to be called after some delay.\n   *\n   * Returns a function that when executed will cancel the scheduled function.\n   */\n  schedule(taskFn: () => void, delay: number): () =>\n      void{const id = setTimeout(taskFn, delay); return () => clearTimeout(id);},\n\n  /**\n   * Schedule a callback to be called before the next render.\n   * (If `window.requestAnimationFrame()` is not available, use `scheduler.schedule()` instead.)\n   *\n   * Returns a function that when executed will cancel the scheduled function.\n   */\n  scheduleBeforeRender(taskFn: () => void): () => void{\n    // TODO(gkalpak): Implement a better way of accessing `requestAnimationFrame()`\n    //                (e.g. accounting for vendor prefix, SSR-compatibility, etc).\n    if (typeof window === 'undefined') {\n      // For SSR just schedule immediately.\n      return scheduler.schedule(taskFn, 0);\n    }\n\n    if (typeof window.requestAnimationFrame === 'undefined') {\n      const frameMs = 16;\n      return scheduler.schedule(taskFn, frameMs);\n    }\n\n    const id = window.requestAnimationFrame(taskFn);\n    return () => window.cancelAnimationFrame(id);\n  },\n};\n\n/**\n * Convert a camelCased string to kebab-cased.\n */\nexport function camelToDashCase(input: string): string {\n  return input.replace(/[A-Z]/g, char => `-${char.toLowerCase()}`);\n}\n\n/**\n * Create a `CustomEvent` (even on browsers where `CustomEvent` is not a constructor).\n */\nexport function createCustomEvent(doc: Document, name: string, detail: any): CustomEvent {\n  const bubbles = false;\n  const cancelable = false;\n\n  // On IE9-11, `CustomEvent` is not a constructor.\n  if (typeof CustomEvent !== 'function') {\n    const event = doc.createEvent('CustomEvent');\n    event.initCustomEvent(name, bubbles, cancelable, detail);\n    return event;\n  }\n\n  return new CustomEvent(name, {bubbles, cancelable, detail});\n}\n\n/**\n * Check whether the input is an `Element`.\n */\nexport function isElement(node: Node): node is Element {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n\n/**\n * Check whether the input is a function.\n */\nexport function isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n\n/**\n * Convert a kebab-cased string to camelCased.\n */\nexport function kebabToCamelCase(input: string): string {\n  return input.replace(/-([a-z\\d])/g, (_, char) => char.toUpperCase());\n}\n\n/**\n * Check whether an `Element` matches a CSS selector.\n */\nexport function matchesSelector(element: Element, selector: string): boolean {\n  return matches.call(element, selector);\n}\n\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n */\nexport function strictEquals(value1: any, value2: any): boolean {\n  return value1 === value2 || (value1 !== value1 && value2 !== value2);\n}\n\n/** Gets a map of default set of attributes to observe and the properties they affect. */\nexport function getDefaultAttributeToPropertyInputs(\n    inputs: {propName: string, templateName: string}[]) {\n  const attributeToPropertyInputs: {[key: string]: string} = {};\n  inputs.forEach(({propName, templateName}) => {\n    attributeToPropertyInputs[camelToDashCase(templateName)] = propName;\n  });\n\n  return attributeToPropertyInputs;\n}\n\n/**\n * Gets a component's set of inputs. Uses the injector to get the component factory where the inputs\n * are defined.\n */\nexport function getComponentInputs(\n    component: Type<any>, injector: Injector): {propName: string, templateName: string}[] {\n  const componentFactoryResolver: ComponentFactoryResolver = injector.get(ComponentFactoryResolver);\n  const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n  return componentFactory.inputs;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// NOTE: This is a (slightly improved) version of what is used in ngUpgrade's\n//       `DowngradeComponentAdapter`.\n// TODO(gkalpak): Investigate if it makes sense to share the code.\n\nimport {isElement, matchesSelector} from './utils';\n\nexport function extractProjectableNodes(host: HTMLElement, ngContentSelectors: string[]): Node[][] {\n  const nodes = host.childNodes;\n  const projectableNodes: Node[][] = ngContentSelectors.map(() => []);\n  let wildcardIndex = -1;\n\n  ngContentSelectors.some((selector, i) => {\n    if (selector === '*') {\n      wildcardIndex = i;\n      return true;\n    }\n    return false;\n  });\n\n  for (let i = 0, ii = nodes.length; i < ii; ++i) {\n    const node = nodes[i];\n    const ngContentIndex = findMatchingIndex(node, ngContentSelectors, wildcardIndex);\n\n    if (ngContentIndex !== -1) {\n      projectableNodes[ngContentIndex].push(node);\n    }\n  }\n\n  return projectableNodes;\n}\n\nfunction findMatchingIndex(node: Node, selectors: string[], defaultIndex: number): number {\n  let matchingIndex = defaultIndex;\n\n  if (isElement(node)) {\n    selectors.some((selector, i) => {\n      if ((selector !== '*') && matchesSelector(node, selector)) {\n        matchingIndex = i;\n        return true;\n      }\n      return false;\n    });\n  }\n\n  return matchingIndex;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef, ComponentFactory, ComponentFactoryResolver, ComponentRef, EventEmitter, Injector, OnChanges, SimpleChange, SimpleChanges, Type} from '@angular/core';\nimport {Observable, merge} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {NgElementStrategy, NgElementStrategyEvent, NgElementStrategyFactory} from './element-strategy';\nimport {extractProjectableNodes} from './extract-projectable-nodes';\nimport {isFunction, scheduler, strictEquals} from './utils';\n\n/** Time in milliseconds to wait before destroying the component ref when disconnected. */\nconst DESTROY_DELAY = 10;\n\n/**\n * Factory that creates new ComponentNgElementStrategy instance. Gets the component factory with the\n * constructor's injector's factory resolver and passes that factory to each strategy.\n *\n * @experimental\n */\nexport class ComponentNgElementStrategyFactory implements NgElementStrategyFactory {\n  componentFactory: ComponentFactory<any>;\n\n  constructor(private component: Type<any>, private injector: Injector) {\n    this.componentFactory =\n        injector.get(ComponentFactoryResolver).resolveComponentFactory(component);\n  }\n\n  create(injector: Injector) {\n    return new ComponentNgElementStrategy(this.componentFactory, injector);\n  }\n}\n\n/**\n * Creates and destroys a component ref using a component factory and handles change detection\n * in response to input changes.\n *\n * @experimental\n */\nexport class ComponentNgElementStrategy implements NgElementStrategy {\n  /** Merged stream of the component's output events. */\n  events: Observable<NgElementStrategyEvent>;\n\n  /** Reference to the component that was created on connect. */\n  private componentRef: ComponentRef<any>|null;\n\n  /** Changes that have been made to the component ref since the last time onChanges was called. */\n  private inputChanges: SimpleChanges|null = null;\n\n  /** Whether the created component implements the onChanges function. */\n  private implementsOnChanges = false;\n\n  /** Whether a change detection has been scheduled to run on the component. */\n  private scheduledChangeDetectionFn: (() => void)|null = null;\n\n  /** Callback function that when called will cancel a scheduled destruction on the component. */\n  private scheduledDestroyFn: (() => void)|null = null;\n\n  /** Initial input values that were set before the component was created. */\n  private readonly initialInputValues = new Map<string, any>();\n\n  /** Set of inputs that were not initially set when the component was created. */\n  private readonly uninitializedInputs = new Set<string>();\n\n  constructor(private componentFactory: ComponentFactory<any>, private injector: Injector) {}\n\n  /**\n   * Initializes a new component if one has not yet been created and cancels any scheduled\n   * destruction.\n   */\n  connect(element: HTMLElement) {\n    // If the element is marked to be destroyed, cancel the task since the component was reconnected\n    if (this.scheduledDestroyFn !== null) {\n      this.scheduledDestroyFn();\n      this.scheduledDestroyFn = null;\n      return;\n    }\n\n    if (!this.componentRef) {\n      this.initializeComponent(element);\n    }\n  }\n\n  /**\n   * Schedules the component to be destroyed after some small delay in case the element is just\n   * being moved across the DOM.\n   */\n  disconnect() {\n    // Return if there is no componentRef or the component is already scheduled for destruction\n    if (!this.componentRef || this.scheduledDestroyFn !== null) {\n      return;\n    }\n\n    // Schedule the component to be destroyed after a small timeout in case it is being\n    // moved elsewhere in the DOM\n    this.scheduledDestroyFn = scheduler.schedule(() => {\n      if (this.componentRef) {\n        this.componentRef !.destroy();\n        this.componentRef = null;\n      }\n    }, DESTROY_DELAY);\n  }\n\n  /**\n   * Returns the component property value. If the component has not yet been created, the value is\n   * retrieved from the cached initialization values.\n   */\n  getInputValue(property: string): any {\n    if (!this.componentRef) {\n      return this.initialInputValues.get(property);\n    }\n\n    return (this.componentRef.instance as any)[property];\n  }\n\n  /**\n   * Sets the input value for the property. If the component has not yet been created, the value is\n   * cached and set when the component is created.\n   */\n  setInputValue(property: string, value: any): void {\n    if (strictEquals(value, this.getInputValue(property))) {\n      return;\n    }\n\n    if (!this.componentRef) {\n      this.initialInputValues.set(property, value);\n      return;\n    }\n\n    this.recordInputChange(property, value);\n    (this.componentRef.instance as any)[property] = value;\n    this.scheduleDetectChanges();\n  }\n\n  /**\n   * Creates a new component through the component factory with the provided element host and\n   * sets up its initial inputs, listens for outputs changes, and runs an initial change detection.\n   */\n  protected initializeComponent(element: HTMLElement) {\n    const childInjector = Injector.create({providers: [], parent: this.injector});\n    const projectableNodes =\n        extractProjectableNodes(element, this.componentFactory.ngContentSelectors);\n    this.componentRef = this.componentFactory.create(childInjector, projectableNodes, element);\n\n    this.implementsOnChanges =\n        isFunction((this.componentRef.instance as any as OnChanges).ngOnChanges);\n\n    this.initializeInputs();\n    this.initializeOutputs();\n\n    this.detectChanges();\n\n    const applicationRef = this.injector.get<ApplicationRef>(ApplicationRef);\n    applicationRef.attachView(this.componentRef.hostView);\n  }\n\n  /** Set any stored initial inputs on the component's properties. */\n  protected initializeInputs(): void {\n    this.componentFactory.inputs.forEach(({propName}) => {\n      const initialValue = this.initialInputValues.get(propName);\n      if (initialValue) {\n        this.setInputValue(propName, initialValue);\n      } else {\n        // Keep track of inputs that were not initialized in case we need to know this for\n        // calling ngOnChanges with SimpleChanges\n        this.uninitializedInputs.add(propName);\n      }\n    });\n\n    this.initialInputValues.clear();\n  }\n\n  /** Sets up listeners for the component's outputs so that the events stream emits the events. */\n  protected initializeOutputs(): void {\n    const eventEmitters = this.componentFactory.outputs.map(({propName, templateName}) => {\n      const emitter = (this.componentRef !.instance as any)[propName] as EventEmitter<any>;\n      return emitter.pipe(map((value: any) => ({name: templateName, value})));\n    });\n\n    this.events = merge(...eventEmitters);\n  }\n\n  /** Calls ngOnChanges with all the inputs that have changed since the last call. */\n  protected callNgOnChanges(): void {\n    if (!this.implementsOnChanges || this.inputChanges === null) {\n      return;\n    }\n\n    // Cache the changes and set inputChanges to null to capture any changes that might occur\n    // during ngOnChanges.\n    const inputChanges = this.inputChanges;\n    this.inputChanges = null;\n    (this.componentRef !.instance as any as OnChanges).ngOnChanges(inputChanges);\n  }\n\n  /**\n   * Schedules change detection to run on the component.\n   * Ignores subsequent calls if already scheduled.\n   */\n  protected scheduleDetectChanges(): void {\n    if (this.scheduledChangeDetectionFn) {\n      return;\n    }\n\n    this.scheduledChangeDetectionFn = scheduler.scheduleBeforeRender(() => {\n      this.scheduledChangeDetectionFn = null;\n      this.detectChanges();\n    });\n  }\n\n  /**\n   * Records input changes so that the component receives SimpleChanges in its onChanges function.\n   */\n  protected recordInputChange(property: string, currentValue: any): void {\n    // Do not record the change if the component does not implement `OnChanges`.\n    if (this.componentRef && !this.implementsOnChanges) {\n      return;\n    }\n\n    if (this.inputChanges === null) {\n      this.inputChanges = {};\n    }\n\n    // If there already is a change, modify the current value to match but leave the values for\n    // previousValue and isFirstChange.\n    const pendingChange = this.inputChanges[property];\n    if (pendingChange) {\n      pendingChange.currentValue = currentValue;\n      return;\n    }\n\n    const isFirstChange = this.uninitializedInputs.has(property);\n    this.uninitializedInputs.delete(property);\n\n    const previousValue = isFirstChange ? undefined : this.getInputValue(property);\n    this.inputChanges[property] = new SimpleChange(previousValue, currentValue, isFirstChange);\n  }\n\n  /** Runs change detection on the component. */\n  protected detectChanges(): void {\n    if (!this.componentRef) {\n      return;\n    }\n\n    this.callNgOnChanges();\n    this.componentRef !.changeDetectorRef.detectChanges();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, Type} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {ComponentNgElementStrategyFactory} from './component-factory-strategy';\nimport {NgElementStrategy, NgElementStrategyFactory} from './element-strategy';\nimport {createCustomEvent, getComponentInputs, getDefaultAttributeToPropertyInputs} from './utils';\n\n/**\n * Prototype for a class constructor based on an Angular component\n * that can be used for custom element registration. Implemented and returned\n * by the {@link createCustomElement createCustomElement() function}.\n *\n * @experimental\n */\nexport interface NgElementConstructor<P> {\n  /**\n   * An array of observed attribute names for the custom element,\n   * derived by transforming input property names from the source component.\n   */\n  readonly observedAttributes: string[];\n\n  /**\n   * Initializes a constructor instance.\n   * @param injector The source component's injector.\n   */\n  new (injector: Injector): NgElement&WithProperties<P>;\n}\n\n/**\n * Implements the functionality needed for a custom element.\n *\n * @experimental\n */\nexport abstract class NgElement extends HTMLElement {\n  /**\n   * The strategy that controls how a component is transformed in a custom element.\n   */\n  protected ngElementStrategy: NgElementStrategy;\n  /**\n   * A subscription to change, connect, and disconnect events in the custom element.\n   */\n  protected ngElementEventsSubscription: Subscription|null = null;\n\n  /**\n    * Prototype for a handler that responds to a change in an observed attribute.\n    * @param attrName The name of the attribute that has changed.\n    * @param oldValue The previous value of the attribute.\n    * @param newValue The new value of the attribute.\n    * @param namespace The namespace in which the attribute is defined.\n    * @returns Nothing.\n    */\n  abstract attributeChangedCallback(\n      attrName: string, oldValue: string|null, newValue: string, namespace?: string): void;\n  /**\n   * Prototype for a handler that responds to the insertion of the custom element in the DOM.\n   * @returns Nothing.\n   */\n  abstract connectedCallback(): void;\n  /**\n   * Prototype for a handler that responds to the deletion of the custom element from the DOM.\n   * @returns Nothing.\n   */\n  abstract disconnectedCallback(): void;\n}\n\n/**\n * Additional type information that can be added to the NgElement class,\n * for properties that are added based\n * on the inputs and methods of the underlying component.\n *\n * @experimental\n */\nexport type WithProperties<P> = {\n  [property in keyof P]: P[property]\n};\n\n/**\n * A configuration that initializes an NgElementConstructor with the\n * dependencies and strategy it needs to transform a component into\n * a custom element class.\n *\n * @experimental\n */\nexport interface NgElementConfig {\n  /**\n   * The injector to use for retrieving the component's factory.\n   */\n  injector: Injector;\n  /**\n   * An optional custom strategy factory to use instead of the default.\n   * The strategy controls how the tranformation is performed.\n   */\n  strategyFactory?: NgElementStrategyFactory;\n}\n\n/**\n *  @description Creates a custom element class based on an Angular component.\n *\n * Builds a class that encapsulates the functionality of the provided component and\n * uses the configuration information to provide more context to the class.\n * Takes the component factory's inputs and outputs to convert them to the proper\n * custom element API and add hooks to input changes.\n *\n * The configuration's injector is the initial injector set on the class,\n * and used by default for each created instance.This behavior can be overridden with the\n * static property to affect all newly created instances, or as a constructor argument for\n * one-off creations.\n *\n * @param component The component to transform.\n * @param config A configuration that provides initialization information to the created class.\n * @returns The custom-element construction class, which can be registered with\n * a browser's `CustomElementRegistry`.\n *\n * @experimental\n */\nexport function createCustomElement<P>(\n    component: Type<any>, config: NgElementConfig): NgElementConstructor<P> {\n  const inputs = getComponentInputs(component, config.injector);\n\n  const strategyFactory =\n      config.strategyFactory || new ComponentNgElementStrategyFactory(component, config.injector);\n\n  const attributeToPropertyInputs = getDefaultAttributeToPropertyInputs(inputs);\n\n  class NgElementImpl extends NgElement {\n    static readonly observedAttributes = Object.keys(attributeToPropertyInputs);\n\n    constructor(injector?: Injector) {\n      super();\n\n      // Note that some polyfills (e.g. document-register-element) do not call the constructor.\n      // Do not assume this strategy has been created.\n      // TODO(andrewseguin): Add e2e tests that cover cases where the constructor isn't called. For\n      // now this is tested using a Google internal test suite.\n      this.ngElementStrategy = strategyFactory.create(injector || config.injector);\n    }\n\n    attributeChangedCallback(\n        attrName: string, oldValue: string|null, newValue: string, namespace?: string): void {\n      if (!this.ngElementStrategy) {\n        this.ngElementStrategy = strategyFactory.create(config.injector);\n      }\n\n      const propName = attributeToPropertyInputs[attrName] !;\n      this.ngElementStrategy.setInputValue(propName, newValue);\n    }\n\n    connectedCallback(): void {\n      if (!this.ngElementStrategy) {\n        this.ngElementStrategy = strategyFactory.create(config.injector);\n      }\n\n      this.ngElementStrategy.connect(this);\n\n      // Listen for events from the strategy and dispatch them as custom events\n      this.ngElementEventsSubscription = this.ngElementStrategy.events.subscribe(e => {\n        const customEvent = createCustomEvent(this.ownerDocument, e.name, e.value);\n        this.dispatchEvent(customEvent);\n      });\n    }\n\n    disconnectedCallback(): void {\n      if (this.ngElementStrategy) {\n        this.ngElementStrategy.disconnect();\n      }\n\n      if (this.ngElementEventsSubscription) {\n        this.ngElementEventsSubscription.unsubscribe();\n        this.ngElementEventsSubscription = null;\n      }\n    }\n  }\n\n  // Add getters and setters to the prototype for each property input. If the config does not\n  // contain property inputs, use all inputs by default.\n  inputs.map(({propName}) => propName).forEach(property => {\n    Object.defineProperty(NgElementImpl.prototype, property, {\n      get: function() { return this.ngElementStrategy.getInputValue(property); },\n      set: function(newValue: any) { this.ngElementStrategy.setInputValue(property, newValue); },\n      configurable: true,\n      enumerable: true,\n    });\n  });\n\n  return (NgElementImpl as any) as NgElementConstructor<P>;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n/**\n * @experimental\n */\nexport const VERSION = new Version('6.0.7+14.sha-563e8e3');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the `elements` package.\n */\nexport {NgElement, NgElementConfig, NgElementConstructor, WithProperties, createCustomElement} from './src/create-custom-element';\nexport {NgElementStrategy, NgElementStrategyEvent, NgElementStrategyFactory} from './src/element-strategy';\nexport {VERSION} from './src/version';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["ComponentFactoryResolver","Injector","ApplicationRef","map","merge","SimpleChange","tslib_1.__extends","Version"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAgBA,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;KACpC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;IAC5E,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;AAE/E,AAAO,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IAC5B,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;CACxF;;AAED,AAMC;;AAED,AAQC;;AAED,AAKC;;AAED,AAEC;;AAED,AAEC;;AAED,AAOC;;AAED,AA0BC;;AAED,AAEC;;AAED,AASC;;AAED,AAAO,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;IACzB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC3D,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACjC,IAAI;QACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;KAC9E;IACD,OAAO,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;YAC/B;QACJ,IAAI;YACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACpD;gBACO,EAAE,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;KACpC;IACD,OAAO,EAAE,CAAC;CACb;;AAED,AAAO,SAAS,QAAQ,GAAG;IACvB,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;QAC9C,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,OAAO,EAAE,CAAC;CACb;;ACpID;;;;;;;AAOA,AAEA,IAAM,OAAO,GAAG,OAAO,CAAC,SAAgB,CAAC;AACzC,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,kBAAkB;IACpF,OAAO,CAAC,iBAAiB,IAAI,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,qBAAqB,CAAC;;;;AAK3F,AAAO,IAAM,SAAS,GAAG;;;;;;IAMvB,QAAQ,EAAR,UAAS,MAAkB,EAAE,KAAa,IACjC,IAAM,EAAE,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,cAAM,OAAA,YAAY,CAAC,EAAE,CAAC,GAAA,CAAC,EAAC;;;;;;;IAQ9E,oBAAoB,EAApB,UAAqB,MAAkB;;;QAGrC,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;;YAEjC,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SACtC;QAED,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,WAAW,EAAE;YACvD,IAAM,OAAO,GAAG,EAAE,CAAC;YACnB,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;SAC5C;QAED,IAAM,EAAE,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;QAChD,OAAO,cAAM,OAAA,MAAM,CAAC,oBAAoB,CAAC,EAAE,CAAC,GAAA,CAAC;KAC9C;CACF,CAAC;;;;AAKF,yBAAgC,KAAa;IAC3C,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA,MAAI,IAAI,CAAC,WAAW,EAAI,GAAA,CAAC,CAAC;CAClE;;;;AAKD,2BAAkC,GAAa,EAAE,IAAY,EAAE,MAAW;IACxE,IAAM,OAAO,GAAG,KAAK,CAAC;IACtB,IAAM,UAAU,GAAG,KAAK,CAAC;;IAGzB,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;QACrC,IAAM,OAAK,GAAG,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAC7C,OAAK,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;QACzD,OAAO,OAAK,CAAC;KACd;IAED,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,EAAC,OAAO,SAAA,EAAE,UAAU,YAAA,EAAE,MAAM,QAAA,EAAC,CAAC,CAAC;CAC7D;;;;AAKD,mBAA0B,IAAU;IAClC,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC;CAC5C;;;;AAKD,oBAA2B,KAAU;IACnC,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;CACpC;;;;AAKD,AAEC;;;;AAKD,yBAAgC,OAAgB,EAAE,QAAgB;IAChE,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;CACxC;;;;AAKD,sBAA6B,MAAW,EAAE,MAAW;IACnD,OAAO,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,IAAI,MAAM,KAAK,MAAM,CAAC,CAAC;CACtE;;AAGD,6CACI,MAAkD;IACpD,IAAM,yBAAyB,GAA4B,EAAE,CAAC;IAC9D,MAAM,CAAC,OAAO,CAAC,UAAC,EAAwB;YAAvB,sBAAQ,EAAE,8BAAY;QACrC,yBAAyB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,GAAG,QAAQ,CAAC;KACrE,CAAC,CAAC;IAEH,OAAO,yBAAyB,CAAC;CAClC;;;;;AAMD,4BACI,SAAoB,EAAE,QAAkB;IAC1C,IAAM,wBAAwB,GAA6B,QAAQ,CAAC,GAAG,CAACA,6BAAwB,CAAC,CAAC;IAClG,IAAM,gBAAgB,GAAG,wBAAwB,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;IACrF,OAAO,gBAAgB,CAAC,MAAM,CAAC;CAChC;;AChID;;;;;;;;;;AAYA,iCAEwC,IAAiB,EAAE,kBAA4B;IACrF,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;IAC9B,IAAM,gBAAgB,GAAa,kBAAkB,CAAC,GAAG,CAAC,cAAM,OAAA,EAAE,GAAA,CAAC,CAAC;IACpE,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC;IAEvB,kBAAkB,CAAC,IAAI,CAAC,UAAC,QAAQ,EAAE,CAAC;QAClC,IAAI,QAAQ,KAAK,GAAG,EAAE;YACpB,aAAa,GAAG,CAAC,CAAC;YAClB,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;KACd,CAAC,CAAC;IAEH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;QAC9C,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,IAAM,cAAc,GAAG,iBAAiB,CAAC,IAAI,EAAE,kBAAkB,EAAE,aAAa,CAAC,CAAC;QAElF,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;YACzB,gBAAgB,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7C;KACF;IAED,OAAO,gBAAgB,CAAC;CACzB;AAED,2BAA2B,IAAU,EAAE,SAAmB,EAAE,YAAoB;IAC9E,IAAI,aAAa,GAAG,YAAY,CAAC;IAEjC,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;QACnB,SAAS,CAAC,IAAI,CAAC,UAAC,QAAQ,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,KAAK,GAAG,KAAK,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE;gBACzD,aAAa,GAAG,CAAC,CAAC;gBAClB,OAAO,IAAI,CAAC;aACb;YACD,OAAO,KAAK,CAAC;SACd,CAAC,CAAC;KACJ;IAED,OAAO,aAAa,CAAC;CACtB;;ACrDD;;;;;;;AAgBA;AACA,IAAM,aAAa,GAAG,EAAE,CAAC;;;;;;;AAQzB;IAGE,2CAAoB,SAAoB,EAAU,QAAkB;QAAhD,cAAS,GAAT,SAAS,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAClE,IAAI,CAAC,gBAAgB;YACjB,QAAQ,CAAC,GAAG,CAACA,6BAAwB,CAAC,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;KAC/E;IAED,kDAAM,GAAN,UAAO,QAAkB;QACvB,OAAO,IAAI,0BAA0B,CAAC,IAAI,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;KACxE;IACH,wCAAC;CAAA,IAAA;AAED;;;;;;AAMA;IAyBE,oCAAoB,gBAAuC,EAAU,QAAkB;QAAnE,qBAAgB,GAAhB,gBAAgB,CAAuB;QAAU,aAAQ,GAAR,QAAQ,CAAU;;QAjB/E,iBAAY,GAAuB,IAAI,CAAC;;QAGxC,wBAAmB,GAAG,KAAK,CAAC;;QAG5B,+BAA0B,GAAsB,IAAI,CAAC;;QAGrD,uBAAkB,GAAsB,IAAI,CAAC;;QAGpC,uBAAkB,GAAG,IAAI,GAAG,EAAe,CAAC;;QAG5C,wBAAmB,GAAG,IAAI,GAAG,EAAU,CAAC;KAEkC;;;;;IAM3F,4CAAO,GAAP,UAAQ,OAAoB;;QAE1B,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;YACpC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;SACnC;KACF;;;;;IAMD,+CAAU,GAAV;QAAA,iBAcC;;QAZC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;YAC1D,OAAO;SACR;;;QAID,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC,QAAQ,CAAC;YAC3C,IAAI,KAAI,CAAC,YAAY,EAAE;gBACrB,KAAI,CAAC,YAAc,CAAC,OAAO,EAAE,CAAC;gBAC9B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;SACF,EAAE,aAAa,CAAC,CAAC;KACnB;;;;;IAMD,kDAAa,GAAb,UAAc,QAAgB;QAC5B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC9C;QAED,OAAQ,IAAI,CAAC,YAAY,CAAC,QAAgB,CAAC,QAAQ,CAAC,CAAC;KACtD;;;;;IAMD,kDAAa,GAAb,UAAc,QAAgB,EAAE,KAAU;QACxC,IAAI,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE;YACrD,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAC7C,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,QAAgB,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;QACtD,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;;;;;IAMS,wDAAmB,GAA7B,UAA8B,OAAoB;QAChD,IAAM,aAAa,GAAGC,aAAQ,CAAC,MAAM,CAAC,EAAC,SAAS,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC;QAC9E,IAAM,gBAAgB,GAClB,uBAAuB,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;QAC/E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;QAE3F,IAAI,CAAC,mBAAmB;YACpB,UAAU,CAAE,IAAI,CAAC,YAAY,CAAC,QAA6B,CAAC,WAAW,CAAC,CAAC;QAE7E,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAiBC,mBAAc,CAAC,CAAC;QACzE,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;KACvD;;IAGS,qDAAgB,GAA1B;QAAA,iBAaC;QAZC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,EAAU;gBAAT,sBAAQ;YAC7C,IAAM,YAAY,GAAG,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC3D,IAAI,YAAY,EAAE;gBAChB,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;aAC5C;iBAAM;;;gBAGL,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aACxC;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;KACjC;;IAGS,sDAAiB,GAA3B;QAAA,iBAOC;QANC,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,EAAwB;gBAAvB,sBAAQ,EAAE,8BAAY;YAC9E,IAAM,OAAO,GAAI,KAAI,CAAC,YAAc,CAAC,QAAgB,CAAC,QAAQ,CAAsB,CAAC;YACrF,OAAO,OAAO,CAAC,IAAI,CAACC,aAAG,CAAC,UAAC,KAAU,IAAK,QAAC,EAAC,IAAI,EAAE,YAAY,EAAE,KAAK,OAAA,EAAC,IAAC,CAAC,CAAC,CAAC;SACzE,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,GAAGC,UAAK,wBAAI,aAAa,EAAC,CAAC;KACvC;;IAGS,oDAAe,GAAzB;QACE,IAAI,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;YAC3D,OAAO;SACR;;;QAID,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAc,CAAC,QAA6B,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;KAC9E;;;;;IAMS,0DAAqB,GAA/B;QAAA,iBASC;QARC,IAAI,IAAI,CAAC,0BAA0B,EAAE;YACnC,OAAO;SACR;QAED,IAAI,CAAC,0BAA0B,GAAG,SAAS,CAAC,oBAAoB,CAAC;YAC/D,KAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;YACvC,KAAI,CAAC,aAAa,EAAE,CAAC;SACtB,CAAC,CAAC;KACJ;;;;IAKS,sDAAiB,GAA3B,UAA4B,QAAgB,EAAE,YAAiB;;QAE7D,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAClD,OAAO;SACR;QAED,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;YAC9B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACxB;;;QAID,IAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAClD,IAAI,aAAa,EAAE;YACjB,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;YAC1C,OAAO;SACR;QAED,IAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE1C,IAAM,aAAa,GAAG,aAAa,GAAG,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/E,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,IAAIC,iBAAY,CAAC,aAAa,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;KAC5F;;IAGS,kDAAa,GAAvB;QACE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,OAAO;SACR;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,YAAc,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;KACvD;IACH,iCAAC;CAAA;;AC5PD;;;;;;;AAoCA;;;;;AAKA;IAAwCC,6BAAW;IAAnD;QAAA,qEA8BC;;;;QAtBW,iCAA2B,GAAsB,IAAI,CAAC;;KAsBjE;IAAD,gBAAC;CAAA,CA9BuC,WAAW,GA8BlD;AAgCD;;;;;;;;;;;;;;;;;;;;AAoBA,6BACI,SAAoB,EAAE,MAAuB;IAC/C,IAAM,MAAM,GAAG,kBAAkB,CAAC,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;IAE9D,IAAM,eAAe,GACjB,MAAM,CAAC,eAAe,IAAI,IAAI,iCAAiC,CAAC,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;IAEhG,IAAM,yBAAyB,GAAG,mCAAmC,CAAC,MAAM,CAAC,CAAC;IAE9E;QAA4BA,iCAAS;QAGnC,uBAAY,QAAmB;YAA/B,YACE,iBAAO,SAOR;;;;;YADC,KAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC;;SAC9E;QAED,gDAAwB,GAAxB,UACI,QAAgB,EAAE,QAAqB,EAAE,QAAgB,EAAE,SAAkB;YAC/E,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC3B,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aAClE;YAED,IAAM,QAAQ,GAAG,yBAAyB,CAAC,QAAQ,CAAG,CAAC;YACvD,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;SAC1D;QAED,yCAAiB,GAAjB;YAAA,iBAYC;YAXC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC3B,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aAClE;YAED,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;YAGrC,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,CAAC;gBAC1E,IAAM,WAAW,GAAG,iBAAiB,CAAC,KAAI,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;gBAC3E,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;aACjC,CAAC,CAAC;SACJ;QAED,4CAAoB,GAApB;YACE,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBAC1B,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;aACrC;YAED,IAAI,IAAI,CAAC,2BAA2B,EAAE;gBACpC,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;gBAC/C,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;aACzC;SACF;QA7Ce,gCAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QA8C9E,oBAAC;KAAA,CA/C2B,SAAS,GA+CpC;;;IAID,MAAM,CAAC,GAAG,CAAC,UAAC,EAAU;YAAT,sBAAQ;QAAM,OAAA,QAAQ;KAAA,CAAC,CAAC,OAAO,CAAC,UAAA,QAAQ;QACnD,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,EAAE,QAAQ,EAAE;YACvD,GAAG,EAAE,cAAa,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE;YAC1E,GAAG,EAAE,UAAS,QAAa,IAAI,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,EAAE;YAC1F,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;KACJ,CAAC,CAAC;IAEH,OAAQ,aAAgD,CAAC;CAC1D;;ACjMD;;;;;;;AAQA,AACA;;;AAGA,AAAO,IAAM,OAAO,GAAG,IAAIC,YAAO,CAAC,mBAAmB,CAAC;;ACZvD;;;;;;;;;;;;AAaA,AAEsC;0EAEoC;;ACjB1E;;;;;;;;;;SAWS;;ACXT;;GAEG;;;;;;;;;;;;;;"}